searchState.loadedDescShard("numcodecs_random_projection", 0, "CI Status MSRV Latest Version Rust Doc Crate Rust Doc Main\nFloating point number in <code>$[0.0, 1.0)$</code>\n<code>RandomProjectionCodec</code> cannot decode from an array with …\nThe reduced dimensionality <code>$K$</code>, to which the data is …\nFloating point types.\nThe random projection matrix is dense and its components …\n<code>$0.5$</code>\nThe reduced dimensionality <code>$K$</code> is derived from <code>epsilon</code>, as …\n<code>RandomProjectionCodec</code> cannot decode into the provided array\n<code>RandomProjectionCodec</code> does not support non-finite …\n<code>RandomProjectionCodec</code> only supports matrix / 2d-shaped …\n<code>RandomProjectionCodec</code> cannot decode into an array with <code>$D$</code> …\n<code>RandomProjectionCodec</code> cannot encode or decode from an …\nFloating point number in <code>$(0.0, 1.0]$</code>\n<code>RandomProjectionCodec</code> cannot decode from an array with zero\nCodec that uses random projections to reduce the …\nErrors that may occur when applying the …\nProjection kind that is used to generate the random …\nMethod with which the reduced dimensionality <code>$K$</code> is …\nThe random projection matrix is sparse where only <code>density</code>% …\n<code>$2.0$</code>\n<code>RandomProjectionCodec</code> does not support the dtype\nExtract the provided <code>density</code> if it is <code>Some(_)</code>, or compute …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from a <code>f64</code>.\nConverts from a <code>usize</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts into a <code>usize</code>.\nFind a ‘safe’ number of components <code>$K$</code> to randomly …\nApplies random projection to the input <code>data</code> and outputs …\nApplies random projection to the input <code>data</code> with the given …\nProjection kind that is used to generate the random …\nApplies the (approximate) inverse of random projection to …\nApplies the (approximate) inverse of random projection to …\nApplies the (approximate) inverse of random projection to …\nApplies the (approximate) inverse of random projection to …\nMethod with which the reduced dimensionality <code>$K$</code> is …\nSeed for generating the random projection matrix\nGenerates two uniform random numbers from a random <code>hash</code> …\nThe codec’s encoding format version. Do not provide this …\nNumber of samples <code>N</code> in the input array\nNumber of features <code>$D$</code> in the encoded array metadata\nNumber of samples <code>N</code> in the output array\nNumber of features <code>$D$</code> in the decoded output array\nThe source of the error\nThe source of the error\nThe <code>density</code> of the sparse projection matrix.\nMaximum distortion rate\nReduced dimensionality")