searchState.loadedDescShard("numcodecs_log", 0, "CI Status MSRV Latest Version Rust Doc Crate Rust Doc Main\nFloating point types.\nLog codec which calculates <code>c = log(1+x)</code> on encoding and …\nErrors that may occur when applying the <code>LogCodec</code>.\n<code>LogCodec</code> cannot decode the <code>decoded</code> dtype into the <code>provided</code> …\n<code>LogCodec</code> cannot decode the decoded array into the provided …\n<code>LogCodec</code> does not support negative floating point data\n<code>LogCodec</code> does not support non-finite (infinite or NaN) …\n<code>LogCodec</code> does not support the dtype\nCompute <code>exp(x)-1</code> over the elements of the input <code>data</code> array.\nReturns <code>exp(self)-1</code>.\nCompute <code>exp(x)-1</code> over the elements of the input <code>data</code> array …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this number is neither infinite nor NaN.\nReturns <code>true</code> if this number is negative.\nCompute <code>ln(x+1)</code> over the elements of the input <code>data</code> array.\nReturns <code>ln(self+1)</code>, the natural logarithm.\nDtype of the <code>decoded</code> data\nShape of the <code>decoded</code> data\nDtype of the <code>provided</code> array into which the data is to be …\nShape of the <code>provided</code> array into which the data is to be …")