searchState.loadedDescShard("numcodecs", 0, "CI Status MSRV Latest Version Rust Doc Crate Rust Doc Main\nAn array where the data has shared ownership and is …\nAn array that owns its data uniquely.\nNumeric n-dimensional arrays with dynamic shapes.\nEnum of all dtypes included in <code>AnyArrayBase</code>.\nA read-only array view.\nA read-write array view.\nAn array with copy-on-write behavior.\nArray-representation support for all dtypes included in …\nCodec identifier.\nCompression codec that <code>encode</code>s and <code>decode</code>s numeric …\nType of the instances of this codec type object.\nDynamically typed compression codec.\nType object for dynamically typed compression codecs.\nError type that may be returned during <code>encode</code>ing and <code>decode</code>…\nStatically typed compression codec.\nType object for statically typed compression codecs.\nType object type for this codec.\nInstantiate a codec of this type from a serialized <code>config</code>…\nCodec identifier.\nReturns a copy-on-write view of the array.\nDecodes the <code>encoded</code> data and returns the result.\nDecodes the <code>encoded</code> data and writes the result into the …\nReturns the dtype of the array.\nEncodes the <code>data</code> and returns the result.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate a codec from a serialized <code>config</code>uration.\nSerializes the configuration parameters for this codec.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurns the array into a uniquely owned array, cloning the …\nReturns whether the array has any elements.\nReturns the total number of elements in the array.\nStatically obtain the type for a statically typed codec.\nReturns the shape of the array.\nReturn the strides of the array.\nReturns the type object for this codec.\nReturns a read-only view of the array.\nReturns a read-write view of the array.")