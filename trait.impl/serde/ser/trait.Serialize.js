(function() {var implementors = {
"numcodecs":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"numcodecs/enum.AnyArrayDType.html\" title=\"enum numcodecs::AnyArrayDType\">AnyArrayDType</a>"]],
"numcodecs_bit_round":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_bit_round/struct.BitRoundCodec.html\" title=\"struct numcodecs_bit_round::BitRoundCodec\">BitRoundCodec</a>"]],
"numcodecs_identity":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_identity/struct.IdentityCodec.html\" title=\"struct numcodecs_identity::IdentityCodec\">IdentityCodec</a>"]],
"numcodecs_reinterpret":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_reinterpret/struct.ReinterpretCodec.html\" title=\"struct numcodecs_reinterpret::ReinterpretCodec\">ReinterpretCodec</a>"]],
"numcodecs_round":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_round/struct.Positive.html\" title=\"struct numcodecs_round::Positive\">Positive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_round/struct.RoundCodec.html\" title=\"struct numcodecs_round::RoundCodec\">RoundCodec</a>"]],
"numcodecs_uniform_noise":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_uniform_noise/struct.UniformNoiseCodec.html\" title=\"struct numcodecs_uniform_noise::UniformNoiseCodec\">UniformNoiseCodec</a>"]],
"numcodecs_zfp":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"numcodecs_zfp/enum.ZfpCompressionMode.html\" title=\"enum numcodecs_zfp::ZfpCompressionMode\">ZfpCompressionMode</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_zfp/struct.ZfpCodec.html\" title=\"struct numcodecs_zfp::ZfpCodec\">ZfpCodec</a>"]],
"numcodecs_zlib":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"numcodecs_zlib/enum.ZlibLevel.html\" title=\"enum numcodecs_zlib::ZlibLevel\">ZlibLevel</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_zlib/struct.ZlibCodec.html\" title=\"struct numcodecs_zlib::ZlibCodec\">ZlibCodec</a>"]],
"numcodecs_zstd":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_zstd/struct.ZstdCodec.html\" title=\"struct numcodecs_zstd::ZstdCodec\">ZstdCodec</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.207/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"numcodecs_zstd/struct.ZstdLevel.html\" title=\"struct numcodecs_zstd::ZstdLevel\">ZstdLevel</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()