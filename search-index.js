var searchIndex = new Map(JSON.parse('[\
["numcodecs",{"t":"GTKRKKRPPPPPPKFRPPPPNNNNNNNMNMNMMNNNNMMNNNNNNNNMNN","n":["AnyCowArray","CODEC_ID","Codec","Codec","DynCodec","DynCodecType","Error","F32","F64","I16","I32","I64","I8","StaticCodec","StaticCodecType","Type","U16","U32","U64","U8","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","codec_from_config","codec_from_config","codec_id","codec_id","decode","encode","eq","fmt","from","from","from_config","get_config","into","into","of","to_owned","try_from","try_from","try_into","try_into","ty","type_id","type_id"],"q":[[0,"numcodecs"],[50,"core::result"],[51,"serde::de"],[52,"core::marker"],[53,"core::error"],[54,"core::fmt"],[55,"serde::ser"],[56,"core::any"]],"i":[0,12,0,6,0,0,15,3,3,3,3,3,3,0,0,9,3,3,3,3,11,3,11,3,3,3,3,6,11,6,11,15,15,3,3,11,3,12,15,11,3,11,3,11,3,11,3,9,11,3],"f":"````````````````````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{f}}}f}{{{b{c}}{b{de}}}h{}{}}{{{b{c}}}h{}}{{{b{{l{}{{j{c}}}}}}e}{{n{c}}}{{Ab{}{{A`{}}}}}Ad}{{{b{{Af{c}}}}e}{{n{g}}}AhAd{}}{{{b{{l{}{{j{c}}}}}}}{{b{Aj}}}{{Ab{}{{A`{}}}}}}{{{b{{Af{c}}}}}{{b{Aj}}}Ah}{{{b{{An{}{{Al{c}}}}}}f}{{n{fc}}}{B`BbBd}}0{{{b{f}}{b{f}}}Bf}{{{b{f}}{b{dBh}}}Bj}{cc{}}0{c{{n{Ah}}}Ad}{{{b{{An{}{{Al{c}}}}}}e}n{B`BbBd}Bl}{ce{}{}}0{{}{{Af{c}}}Ah}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{{Ab{}{{A`{c}}}}}}}cl}{{{b{c}}}Bn{}}0","D":"Bn","p":[[1,"reference"],[0,"mut"],[6,"AnyCowArray",0],[1,"unit"],[17,"Codec"],[10,"DynCodecType",0],[6,"Result",50],[17,"Type"],[10,"DynCodec",0],[10,"Deserializer",51],[5,"StaticCodecType",0],[10,"StaticCodec",0],[1,"str"],[17,"Error"],[10,"Codec",0],[10,"Send",52],[10,"Sync",52],[10,"Error",53],[1,"bool"],[5,"Formatter",54],[8,"Result",54],[10,"Serializer",55],[5,"TypeId",56]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsABwAIAAUAEQAKAB0AAAAfAAAAIgABACsABAAxAAEA"}],\
["numcodecs_python",{"t":"FFKKFFFNNNNNNNNNNNNMNNNMNMNMNMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Codec","CodecClass","CodecClassMethods","CodecMethods","PyCodec","PyCodecClass","Registry","as_codec","as_codec_class","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone_into","clone_to_uninit","codec_from_config","codec_from_config","codec_id","codec_id","decode","decode","encode","encode","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_codec","from_codec_class","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_registry_with_config","get_codec","get_config","get_config","into","into","into","into","into","into_codec","into_codec_class","register_codec","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","ty","type_check","type_check","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"numcodecs_python"],[79,"numcodecs_python::pycodec"],[80,"pyo3::marker"],[81,"numcodecs_python::codec"],[82,"pyo3::instance"],[83,"numcodecs_python::codec_class"],[84,"pyo3::types::dict"],[85,"pyo3::err"],[86,"core::result"],[87,"serde::de"],[88,"alloc::string"],[89,"pyo3::types::any"],[90,"core::option"],[91,"numcodecs"],[92,"pyo3_ffi::object"],[93,"serde::ser"],[94,"core::convert"],[95,"core::any"],[96,"numcodecs_python::registry"]],"i":[0,0,0,0,0,0,0,1,6,4,7,1,6,28,4,7,1,6,28,9,1,1,1,11,6,11,6,9,1,9,1,4,7,1,6,28,4,7,1,6,4,7,1,28,9,1,4,7,1,6,28,1,6,28,1,4,4,7,7,1,6,28,4,7,4,7,4,7,1,6,28,1,4,7,4,7,1,6,28],"f":"```````{{{d{b}}f}{{d{{j{h}}}}}}{{{d{l}}f}{{d{{j{n}}}}}}{{{d{c}}}{{d{e}}}{}{}}0000{{{d{A`c}}}{{d{A`e}}}{}{}}0000{{{d{Ab}}}{{j{n}}}}{{{d{b}}}b}{{{d{c}}{d{A`e}}}Ad{}{}}{{{d{c}}}Ad{}}{{{d{Af}}{Aj{Ah}}}{{An{{j{h}}Al}}}}{{{d{l}}c}{{An{e}}}B`{}}{{{d{Af}}}{{An{BbAl}}}}{{{d{l}}}{{d{Bd}}}}{{{d{Ab}}{Aj{Bf}}{Bh{{Aj{Bf}}}}}{{An{{j{Bf}}Al}}}}{{{d{b}}Bj}{{An{Bjc}}}{}}{{{d{Ab}}{Aj{Bf}}}{{An{{j{Bf}}Al}}}}1{cc{}}0000{{fBl}{{Bh{{d{c}}}}}{}}0{{{j{h}}}{{An{bAl}}}}{{{j{n}}}{{An{lAl}}}}22{c{{An{b}}}B`}{{{Aj{Ah}}}{{An{{j{h}}Al}}}}{{{d{Ab}}}{{An{{j{Ah}}Al}}}}{{{d{b}}c}AnBn}{ce{}{}}0000{{bf}{{j{h}}}}{{lf}{{j{n}}}}{{{Aj{n}}{Bh{{d{Bd}}}}}{{An{AdAl}}}}{{{d{c}}}e{}{}}{c{{An{e}}}{}{}}{c{{An{{d{e}}C`}}}{{Cb{{d{Bf}}}}}{}}1011100{c{{d{e}}}{{Cb{{d{Bf}}}}}{}}022222{{{d{b}}}c{}}{{{d{{j{Bf}}}}}Cd}0{{{d{c}}}Cf{}}0000","D":"Db","p":[[5,"PyCodec",0,79],[1,"reference"],[5,"Python",80],[5,"Codec",0,81],[5,"Bound",82],[5,"PyCodecClass",0,79],[5,"CodecClass",0,83],[0,"mut"],[10,"CodecMethods",0,81],[1,"unit"],[10,"CodecClassMethods",0,83],[5,"PyDict",84],[5,"Borrowed",82],[5,"PyErr",85],[6,"Result",86],[10,"Deserializer",87],[5,"String",88],[1,"str"],[5,"PyAny",89],[6,"Option",90],[6,"AnyCowArray",91],[5,"PyObject",92],[10,"Serializer",93],[5,"PyDowncastError",85],[10,"Into",94],[1,"bool"],[5,"TypeId",95],[5,"Registry",0]],"r":[[0,81],[1,83],[2,83],[3,81],[4,79],[5,79],[6,96]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC4ACgAKAAkAFQACABkAAAAbAAAAHQAAAB8AAAAlAAEAKQABAC4AAAA3ABgA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
