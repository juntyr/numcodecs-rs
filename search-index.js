var searchIndex = new Map(JSON.parse('[\
["numcodecs",{"t":"IIGIIIIIKTKRKKRPPPPPPPPRPPPPPPPPRPPPPPPPPRPPPPPPPPRPPPPPPPPRPPPPPPPPRKFRPPPPPPPPRPPPPPPPPRPPPPPPPPRPPPPPPPPRNNNNNNNMNMNNMMMNNNNMMNNNNNNNNNNNNMNNNN","n":["AnyArcArray","AnyArray","AnyArrayBase","AnyArrayView","AnyArrayViewMut","AnyCowArray","AnyRawArrayView","AnyRawArrayViewMut","AnyRawData","CODEC_ID","Codec","Codec","DynCodec","DynCodecType","Error","F32","F32","F32","F32","F32","F32","F32","F32","F32","F64","F64","F64","F64","F64","F64","F64","F64","F64","I16","I16","I16","I16","I16","I16","I16","I16","I16","I32","I32","I32","I32","I32","I32","I32","I32","I32","I64","I64","I64","I64","I64","I64","I64","I64","I64","I8","I8","I8","I8","I8","I8","I8","I8","I8","StaticCodec","StaticCodecType","Type","U16","U16","U16","U16","U16","U16","U16","U16","U16","U32","U32","U32","U32","U32","U32","U32","U32","U32","U64","U64","U64","U64","U64","U64","U64","U64","U64","U8","U8","U8","U8","U8","U8","U8","U8","U8","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","codec_from_config","codec_from_config","codec_id","codec_id","cow","decode","decode_into","encode","eq","fmt","from","from","from_config","get_config","into","into","is_empty","len","of","shape","strides","to_owned","try_from","try_from","try_into","try_into","ty","type_id","type_id","view","view_mut"],"q":[[0,"numcodecs"],[146,"ndarray::data_traits"],[147,"core::result"],[148,"serde::de"],[149,"core::marker"],[150,"core::error"],[151,"core::fmt"],[152,"serde::ser"],[153,"core::any"]],"i":[0,0,0,0,0,0,0,0,0,24,0,18,0,0,29,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,0,0,21,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,3,45,30,34,35,26,46,47,15,3,23,3,23,3,3,3,18,23,18,23,3,29,29,29,3,3,3,23,24,29,3,23,3,3,23,3,3,3,3,23,3,23,21,3,23,3,3],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{{f{c}}}}}{{f{c}}}{{An{}{{h{j}}{l{j}}{n{j}}{A`{j}}{Ab{j}}{Ad{j}}{Af{j}}{Ah{j}}{Aj{j}}{Al{j}}}}}}{{{b{c}}{b{de}}}B`{}{}}{{{b{c}}}B`{}}{{{b{{Bd{}{{Bb{c}}}}}}e}{{Bf{c}}}{{Bj{}{{Bh{}}}}}Bl}{{{b{{Bn{c}}}}e}{{Bf{g}}}C`Bl{}}{{{b{{Bd{}{{Bb{c}}}}}}}{{b{Cb}}}{{Bj{}{{Bh{}}}}}}{{{b{{Bn{c}}}}}{{b{Cb}}}C`}{{{b{{f{c}}}}}Cd{{An{}{{h{Cf}}{l{Cf}}{n{Cf}}{A`{Cf}}{Ab{Cf}}{Ad{Cf}}{Af{Cf}}{Ah{Cf}}{Aj{Cf}}{Al{Cf}}}}}}{{{b{{Cj{}{{Ch{c}}}}}}Cd}{{Bf{Clc}}}{CnD`Db}}{{{b{{Cj{}{{Ch{c}}}}}}DdDf}{{Bf{B`c}}}{CnD`Db}}1{{{b{{f{c}}}}{b{{f{c}}}}}Dh{{An{}{{h{Cf}}{l{Cf}}{n{Cf}}{A`{Cf}}{Ab{Cf}}{Ad{Cf}}{Af{Cf}}{Ah{Cf}}{Aj{Cf}}{Al{Cf}}}}}}{{{b{{f{c}}}}{b{dDj}}}Dl{{An{}{{h{Cf}}{l{Cf}}{n{Cf}}{A`{Cf}}{Ab{Cf}}{Ad{Cf}}{Af{Cf}}{Ah{Cf}}{Aj{Cf}}{Al{Cf}}}}}}{cc{}}0{c{{Bf{C`}}}Bl}{{{b{{Cj{}{{Ch{c}}}}}}e}Bf{CnD`Db}Dn}{ce{}{}}0{{{b{{f{c}}}}}DhAn}{{{b{{f{c}}}}}E`An}{{}{{Bn{c}}}C`}{{{b{{f{c}}}}}{{b{{Eb{E`}}}}}An}{{{b{{f{c}}}}}{{b{{Eb{Ed}}}}}An}{{{b{c}}}e{}{}}{c{{Bf{e}}}{}{}}000{{{b{{Bj{}{{Bh{c}}}}}}}cBd}{{{b{c}}}Ef{}}0{{{b{{f{c}}}}}Dd{{An{}{{h{Cf}}{l{Cf}}{n{Cf}}{A`{Cf}}{Ab{Cf}}{Ad{Cf}}{Af{Cf}}{Ah{Cf}}{Aj{Cf}}{Al{Cf}}}}}}{{{b{d{f{c}}}}}Df{{An{}{{h{Eh}}{l{Eh}}{n{Eh}}{A`{Eh}}{Ab{Eh}}{Ad{Eh}}{Af{Eh}}{Ah{Eh}}{Aj{Eh}}{Al{Eh}}}}}}","D":"C`","p":[[1,"reference"],[0,"mut"],[6,"AnyArrayBase",0],[17,"U8"],[10,"RawDataClone",146],[17,"U16"],[17,"U32"],[17,"U64"],[17,"I8"],[17,"I16"],[17,"I32"],[17,"I64"],[17,"F32"],[17,"F64"],[10,"AnyRawData",0],[1,"unit"],[17,"Codec"],[10,"DynCodecType",0],[6,"Result",147],[17,"Type"],[10,"DynCodec",0],[10,"Deserializer",148],[5,"StaticCodecType",0],[10,"StaticCodec",0],[1,"str"],[8,"AnyCowArray",0],[10,"Data",146],[17,"Error"],[10,"Codec",0],[8,"AnyArray",0],[10,"Send",149],[10,"Sync",149],[10,"Error",150],[8,"AnyArrayView",0],[8,"AnyArrayViewMut",0],[1,"bool"],[5,"Formatter",151],[8,"Result",151],[10,"Serializer",152],[1,"usize"],[1,"slice"],[1,"isize"],[5,"TypeId",153],[10,"DataMut",146],[8,"AnyArcArray",0],[8,"AnyRawArrayView",0],[8,"AnyRawArrayViewMut",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHoACgABAAEABAAFABAANQBJACoAdQAAAHcAAQB8AAEAhAABAIcABgCPAAMA"}],\
["numcodecs_python",{"t":"FFKKFFFNNNNNNNNNNNNMNNNMNMNMNNMNHNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Codec","CodecClass","CodecClassMethods","CodecMethods","PyCodec","PyCodecClass","Registry","as_codec","as_codec_class","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone_into","clone_to_uninit","codec_from_config","codec_from_config","codec_id","codec_id","decode","decode","decode_into","encode","encode","export_codec_class","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_codec","from_codec_class","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_registry_with_config","get_codec","get_config","get_config","into","into","into","into","into","into_codec","into_codec_class","register_codec","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","ty","type_check","type_check","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"numcodecs_python"],[81,"numcodecs_python::pycodec"],[82,"pyo3::marker"],[83,"numcodecs_python::codec"],[84,"pyo3::instance"],[85,"numcodecs_python::codec_class"],[86,"pyo3::types::dict"],[87,"pyo3::err"],[88,"core::result"],[89,"serde::de"],[90,"alloc::string"],[91,"pyo3::types::any"],[92,"core::option"],[93,"numcodecs"],[94,"pyo3::types::module"],[95,"pyo3_ffi::object"],[96,"serde::ser"],[97,"core::convert"],[98,"core::any"],[99,"numcodecs_python::registry"],[100,"numcodecs_python::export"]],"i":[0,0,0,0,0,0,0,1,6,4,7,1,6,33,4,7,1,6,33,9,1,1,1,11,6,11,6,9,1,1,9,1,0,4,7,1,6,33,4,7,1,6,4,7,1,33,9,1,4,7,1,6,33,1,6,33,1,4,4,7,7,1,6,33,4,7,4,7,4,7,1,6,33,1,4,7,4,7,1,6,33],"f":"```````{{{d{b}}f}{{d{{j{h}}}}}}{{{d{l}}f}{{d{{j{n}}}}}}{{{d{c}}}{{d{e}}}{}{}}0000{{{d{A`c}}}{{d{A`e}}}{}{}}0000{{{d{Ab}}}{{j{n}}}}{{{d{b}}}b}{{{d{c}}{d{A`e}}}Ad{}{}}{{{d{c}}}Ad{}}{{{d{Af}}{Aj{Ah}}}{{An{{j{h}}Al}}}}{{{d{l}}c}{{An{e}}}B`{}}{{{d{Af}}}{{An{BbAl}}}}{{{d{l}}}{{d{Bd}}}}{{{d{Ab}}{Aj{Bf}}{Bh{{Aj{Bf}}}}}{{An{{j{Bf}}Al}}}}{{{d{b}}Bj}{{An{Blc}}}{}}{{{d{b}}BnC`}{{An{Adc}}}{}}{{{d{Ab}}{Aj{Bf}}}{{An{{j{Bf}}Al}}}}2{{fc{Aj{Cb}}}{{An{{j{n}}Al}}}Cd}{cc{}}0000{{fCf}{{Bh{{d{c}}}}}{}}0{{{j{h}}}{{An{bAl}}}}{{{j{n}}}{{An{lAl}}}}22{c{{An{b}}}B`}{{{Aj{Ah}}}{{An{{j{h}}Al}}}}{{{d{Ab}}}{{An{{j{Ah}}Al}}}}{{{d{b}}c}AnCh}{ce{}{}}0000{{bf}{{j{h}}}}{{lf}{{j{n}}}}{{{Aj{n}}{Bh{{d{Bd}}}}}{{An{AdAl}}}}{{{d{c}}}e{}{}}{c{{An{{d{e}}Cj}}}{{Cl{{d{Bf}}}}}{}}{c{{An{e}}}{}{}}1000011{c{{d{e}}}{{Cl{{d{Bf}}}}}{}}011111{{{d{b}}}c{}}{{{d{{j{Bf}}}}}Cn}0{{{d{c}}}D`{}}0000","D":"Dd","p":[[5,"PyCodec",0,81],[1,"reference"],[5,"Python",82],[5,"Codec",0,83],[5,"Bound",84],[5,"PyCodecClass",0,81],[5,"CodecClass",0,85],[0,"mut"],[10,"CodecMethods",0,83],[1,"unit"],[10,"CodecClassMethods",0,85],[5,"PyDict",86],[5,"Borrowed",84],[5,"PyErr",87],[6,"Result",88],[10,"Deserializer",89],[5,"String",90],[1,"str"],[5,"PyAny",91],[6,"Option",92],[8,"AnyCowArray",93],[8,"AnyArray",93],[8,"AnyArrayView",93],[8,"AnyArrayViewMut",93],[5,"PyModule",94],[10,"DynCodecType",93],[5,"PyObject",95],[10,"Serializer",96],[5,"PyDowncastError",87],[10,"Into",97],[1,"bool"],[5,"TypeId",98],[5,"Registry",0]],"r":[[0,83],[1,85],[2,85],[3,83],[4,81],[5,81],[6,99],[32,100]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8ACgAKAAkAFQACABkAAAAbAAAAHQABACAAAAAnAAEAKwABADAAAAA5ABgA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
