var searchIndex = new Map(JSON.parse('[\
["numcodecs",{"t":"IIGGIIIKTKRKKRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRKFRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRNNNNNNNNNNNNNNMNMNNMMNNMNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNN","n":["AnyArcArray","AnyArray","AnyArrayBase","AnyArrayDType","AnyArrayView","AnyArrayViewMut","AnyCowArray","AnyRawData","CODEC_ID","Codec","Codec","DynCodec","DynCodecType","Error","F32","F32","F32","F32","F32","F32","F32","F32","F64","F64","F64","F64","F64","F64","F64","F64","I16","I16","I16","I16","I16","I16","I16","I16","I32","I32","I32","I32","I32","I32","I32","I32","I64","I64","I64","I64","I64","I64","I64","I64","I8","I8","I8","I8","I8","I8","I8","I8","StaticCodec","StaticCodecType","Type","U16","U16","U16","U16","U16","U16","U16","U16","U32","U32","U32","U32","U32","U32","U32","U32","U64","U64","U64","U64","U64","U64","U64","U64","U8","U8","U8","U8","U8","U8","U8","U8","as_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","codec_from_config","codec_from_config","codec_id","codec_id","cow","decode","decode_into","deserialize","dtype","encode","eq","eq","fmt","fmt","fmt","from","from","from","from_config","get_config","hash","into","into","into","into_owned","is_empty","len","of","serialize","shape","strides","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","ty","type_id","type_id","type_id","view","view_mut","with_bytes_mut","with_zeros_bytes","with_zeros_bytes","zeros","zeros"],"q":[[0,"numcodecs"],[162,"numcodecs::array"],[163,"alloc::borrow"],[164,"numcodecs::codec"],[165,"core::result"],[166,"serde::de"],[167,"core::marker"],[168,"core::error"],[169,"core::fmt"],[170,"serde::ser"],[171,"core::hash"],[172,"alloc::string"],[173,"core::any"],[174,"core::ops::function"],[175,"ndarray::data_repr"]],"i":[0,0,0,0,0,0,0,0,17,0,11,0,0,21,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,0,0,14,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,41,22,26,27,19,1,8,6,1,1,16,8,1,16,8,1,8,1,8,1,8,8,11,16,11,16,1,21,21,8,1,21,1,8,1,8,8,1,16,8,17,21,8,1,16,8,1,1,1,16,8,1,1,1,8,8,1,16,8,1,16,8,14,1,16,8,1,1,1,22,1,22,1],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````{{{d{{b{c}}}}}{{j{{h{f}}}}}l}{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{{b{c}}}}}{{b{c}}}l}{{{d{A`}}}A`}{{d{d{nc}}}Ab{}}0{dAb}00{{{d{{Af{}{{Ad{c}}}}}}e}{{Ah{c}}}{{Al{}{{Aj{}}}}}An}{{{d{{B`{c}}}}e}{{Ah{g}}}BbAn{}}{{{d{{Af{}{{Ad{c}}}}}}}{{d{Bd}}}{{Al{}{{Aj{}}}}}}{{{d{{B`{c}}}}}{{d{Bd}}}Bb}{{{d{{b{c}}}}}Bfl}{{{d{{Bj{}{{Bh{c}}}}}}Bf}{{Ah{Blc}}}{BnC`Cb}}{{{d{{Bj{}{{Bh{c}}}}}}CdCf}{{Ah{Abc}}}{BnC`Cb}}{c{{Ah{A`}}}An}{{{d{{b{c}}}}}A`l}3{{{d{{b{c}}}}{d{{b{c}}}}}Chl}{{{d{A`}}{d{A`}}}Ch}{{{d{{b{c}}}}{d{nCj}}}Cll}{{{d{A`}}{d{nCj}}}Cl}0{cc{}}00{c{{Ah{Bb}}}An}{{{d{{Bj{}{{Bh{c}}}}}}e}Ah{BnC`Cb}Cn}{{{d{A`}}{d{nc}}}AbD`}{{}c{}}00{{{b{c}}}Bll}{{{d{{b{c}}}}}Chl}{{{d{{b{c}}}}}Dbl}{{}{{B`{c}}}Bb}{{{d{A`}}c}AhCn}{{{d{{b{c}}}}}{{d{{h{Db}}}}}l}{{{d{{b{c}}}}}{{d{{h{Dd}}}}}l}{dc{}}0{dDf}{c{{Ah{e}}}{}{}}00{{}{{Ah{c}}}{}}00{{{d{{Al{}{{Aj{c}}}}}}}cAf}{dDh}00{{{d{{b{c}}}}}Cdl}{{{d{n{b{c}}}}}Cfl}{{{d{n{b{c}}}}g}el{}{{Dl{{d{n{h{f}}}}}{{Dj{e}}}}}}{{A`{d{{h{Db}}}}e}{{Dn{Blc}}}{}{{Dl{{d{n{h{f}}}}}{{Dj{c}}}}}}{{A`{d{{h{Db}}}}e}{{Dn{{b{{E`{Ab}}}}c}}}{}{{Dl{{d{n{h{f}}}}}{{Dj{c}}}}}}{{A`{d{{h{Db}}}}}Bl}{{A`{d{{h{Db}}}}}{{b{{E`{Ab}}}}}}","D":"F`","p":[[6,"AnyArrayBase",0,162],[1,"reference"],[1,"u8"],[1,"slice"],[6,"Cow",163],[10,"AnyRawData",0,162],[0,"mut"],[6,"AnyArrayDType",0,162],[1,"unit"],[17,"Codec"],[10,"DynCodecType",0,164],[6,"Result",165],[17,"Type"],[10,"DynCodec",0,164],[10,"Deserializer",166],[5,"StaticCodecType",0,164],[10,"StaticCodec",0,164],[1,"str"],[8,"AnyCowArray",0,162],[17,"Error"],[10,"Codec",0,164],[8,"AnyArray",0,162],[10,"Send",167],[10,"Sync",167],[10,"Error",168],[8,"AnyArrayView",0,162],[8,"AnyArrayViewMut",0,162],[1,"bool"],[5,"Formatter",169],[8,"Result",169],[10,"Serializer",170],[10,"Hasher",171],[1,"usize"],[1,"isize"],[5,"String",172],[5,"TypeId",173],[17,"Output"],[10,"FnOnce",174],[1,"tuple"],[5,"OwnedRepr",175],[8,"AnyArcArray",0]],"r":[[0,162],[1,162],[2,162],[3,162],[4,162],[5,162],[6,162],[7,162],[9,164],[11,164],[12,164],[62,164],[63,164]],"b":[[124,"impl-Display-for-AnyArrayDType"],[125,"impl-Debug-for-AnyArrayDType"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHIACwAPAC8AQgAfAGMADABxAAAAcwAAAHcAAAB6AAQAhAAAAIwAAACPAAgAmQACAA=="}],\
["numcodecs_bit_round",{"t":"TRFGPKTTPPTPHNNNNNNNNNNNNNNNMNNNNONMNNNNNNNNNOOOOOO","n":["BINARY_ONE","Binary","BitRoundCodec","BitRoundCodecError","ExcessiveKeepBits","Float","MANITSSA_BITS","MANTISSA_MASK","MismatchedDecodeIntoDtype","MismatchedDecodeIntoShape","TY","UnsupportedDtype","bit_round","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","fmt","from","from","from_binary","from_config","get_config","into","into","keepbits","serialize","to_binary","to_owned","to_string","try_from","try_from","try_into","try_into","ty","type_id","type_id","decoded","decoded","dtype","keepbits","provided","provided"],"q":[[0,"numcodecs_bit_round"],[45,"numcodecs_bit_round::BitRoundCodecError"],[51,"ndarray"],[52,"core::result"],[53,"ndarray::dimension::dimension_trait"],[54,"numcodecs::array"],[55,"serde::de"],[56,"core::fmt"],[57,"core::marker"],[58,"core::ops::bit"],[59,"core::ops::arith"],[60,"serde::ser"],[61,"alloc::string"],[62,"core::any"]],"i":[6,6,0,0,4,0,6,6,4,4,6,4,0,10,4,10,4,10,10,10,10,10,10,10,4,4,10,4,6,10,10,10,4,10,10,6,10,4,10,4,10,4,10,10,4,32,33,34,34,32,33],"f":"````````````{{{b{ce}}d}{{j{{f{ce}}h}}}ln}{A`{{A`{c}}}{}}0{{{A`{Ab}}}{{A`{Abc}}}{}}0{{{A`{Ad}}}Ad}{{A`{A`{Abc}}}Af{}}{A`Af}{{{A`{Ad}}Ah}{{j{Ajc}}}{}}{{{A`{Ad}}AlAn}{{j{Afc}}}{}}{c{{j{Ad}}}B`}2{{{A`{h}}{A`{AbBb}}}Bd}0{cc{}}0{c{{l{}{{Bf{c}}}}}{Bh{Bl{}{{Bj{c}}}}{C`{Bn}{{Bj{c}}}}{Cb{c}{{Bj{c}}}}{Cd{c}}{Cf{c}{{Bj{c}}}}{Ch{c}}}}3{{{A`{Ad}}c}jCj}{{}c{}}0`1{{{l{}{{Bf{c}}}}}c{Bh{Bl{}{{Bj{c}}}}{C`{Bn}{{Bj{c}}}}{Cb{c}{{Bj{c}}}}{Cd{c}}{Cf{c}{{Bj{c}}}}{Ch{c}}}}{A`c{}}{A`Cl}{c{{j{e}}}{}{}}0{{}{{j{c}}}{}}0{A`}{A`Cn}0``````","D":"Cf","p":[[8,"CowArray",51],[1,"u8"],[8,"Array",51],[6,"BitRoundCodecError",0],[6,"Result",52],[10,"Float",0],[10,"Dimension",53],[1,"reference"],[0,"mut"],[5,"BitRoundCodec",0],[1,"unit"],[8,"AnyCowArray",54],[8,"AnyArray",54],[8,"AnyArrayView",54],[8,"AnyArrayViewMut",54],[10,"Deserializer",55],[5,"Formatter",56],[8,"Result",56],[17,"Binary"],[10,"Copy",57],[17,"Output"],[10,"Not",58],[1,"u32"],[10,"Shr",58],[10,"Add",59],[10,"AddAssign",59],[10,"BitAnd",58],[10,"BitAndAssign",58],[10,"Serializer",60],[5,"String",61],[5,"TypeId",62],[15,"MismatchedDecodeIntoDtype",45],[15,"MismatchedDecodeIntoShape",45],[15,"ExcessiveKeepBits",45]],"r":[],"b":[[24,"impl-Display-for-BitRoundCodecError"],[25,"impl-Debug-for-BitRoundCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgABAAOAAwAHgABACMAAAAlAAgA"}],\
["numcodecs_identity",{"t":"FGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOO","n":["IdentityCodec","IdentityCodecError","MismatchedDecodeIntoDtype","MismatchedDecodeIntoShape","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","fmt","from","from","from_config","get_config","into","into","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","ty","type_id","type_id","decoded","decoded","provided","provided"],"q":[[0,"numcodecs_identity"],[33,"numcodecs_identity::IdentityCodecError"],[37,"numcodecs::array"],[38,"core::result"],[39,"serde::de"],[40,"core::fmt"],[41,"serde::ser"],[42,"alloc::string"],[43,"core::any"]],"i":[0,0,11,11,3,11,3,11,3,3,3,3,3,3,3,11,11,3,11,3,3,3,11,3,3,11,3,11,3,11,3,3,11,17,18,17,18],"f":"````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{b{b{dc}}}h{}}{bh}{{{b{f}}j}{{n{lc}}}{}}{{{b{f}}A`Ab}{{n{hc}}}{}}{c{{n{f}}}Ad}2{{{b{Af}}{b{dAh}}}Aj}0{cc{}}02{{{b{f}}c}nAl}{{}c{}}01{bc{}}{bAn}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{b}{bB`}0````","D":"Aj","p":[[1,"reference"],[0,"mut"],[5,"IdentityCodec",0],[1,"unit"],[8,"AnyCowArray",37],[8,"AnyArray",37],[6,"Result",38],[8,"AnyArrayView",37],[8,"AnyArrayViewMut",37],[10,"Deserializer",39],[6,"IdentityCodecError",0],[5,"Formatter",40],[8,"Result",40],[10,"Serializer",41],[5,"String",42],[5,"TypeId",43],[15,"MismatchedDecodeIntoDtype",33],[15,"MismatchedDecodeIntoShape",33]],"r":[],"b":[[15,"impl-Display-for-IdentityCodecError"],[16,"impl-Debug-for-IdentityCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgAAwAFAAwAFAABABgACQA="}],\
["numcodecs_python",{"t":"FFFFKKFNNNNNNNNNNNNMNNNMNMNMNNMNHNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["PyCodec","PyCodecAdapter","PyCodecClass","PyCodecClassAdapter","PyCodecClassMethods","PyCodecMethods","PyCodecRegistry","as_codec","as_codec_class","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone_into","clone_to_uninit","codec_from_config","codec_from_config","codec_id","codec_id","decode","decode","decode_into","encode","encode","export_codec_class","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_codec","from_codec_class","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_registry_with_config","get_codec","get_config","get_config","into","into","into","into","into","into_codec","into_codec_class","register_codec","to_owned","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","ty","type_check","type_check","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"numcodecs_python"],[82,"numcodecs_python::adapter"],[83,"pyo3::marker"],[84,"numcodecs_python::codec"],[85,"pyo3::instance"],[86,"numcodecs_python::codec_class"],[87,"pyo3::types::dict"],[88,"pyo3::err"],[89,"core::result"],[90,"serde::de"],[91,"alloc::string"],[92,"pyo3::types::any"],[93,"core::option"],[94,"numcodecs::array"],[95,"pyo3::types::module"],[96,"numcodecs::codec"],[97,"pyo3_ffi::object"],[98,"serde::ser"],[99,"core::convert"],[100,"core::any"],[101,"numcodecs_python::registry"],[102,"numcodecs_python::export"]],"i":[0,0,0,0,0,0,0,1,6,1,6,4,7,33,1,6,4,7,33,9,1,1,1,11,6,11,6,9,1,1,9,1,0,1,6,4,7,33,4,7,1,6,4,7,1,33,9,1,1,6,4,7,33,1,6,33,1,1,1,6,4,4,7,7,33,4,7,4,7,1,6,4,7,33,1,4,7,1,6,4,7,33],"f":"```````{{{d{b}}f}{{d{{j{h}}}}}}{{{d{l}}f}{{d{{j{n}}}}}}{d{{d{c}}}{}}0000{{{d{A`}}}{{d{A`c}}}{}}0000{{{d{Ab}}}{{j{n}}}}{{{d{b}}}b}{{d{d{A`c}}}Ad{}}{dAd}{{{d{Af}}{Aj{Ah}}}{{An{{j{h}}Al}}}}{{{d{l}}c}{{An{e}}}B`{}}{{{d{Af}}}{{An{BbAl}}}}{{{d{l}}}{{d{Bd}}}}{{{d{Ab}}{Aj{Bf}}{Bh{{Aj{Bf}}}}}{{An{{j{Bf}}Al}}}}{{{d{b}}Bj}{{An{Blc}}}{}}{{{d{b}}BnC`}{{An{Adc}}}{}}{{{d{Ab}}{Aj{Bf}}}{{An{{j{Bf}}Al}}}}2{{fc{Aj{Cb}}}{{An{{j{n}}Al}}}Cd}{cc{}}0000{{fCf}{{Bh{{d{c}}}}}{}}0{{{j{h}}}{{An{bAl}}}}{{{j{n}}}{{An{lAl}}}}22{c{{An{b}}}B`}{{{Aj{Ah}}}{{An{{j{h}}Al}}}}{{{d{Ab}}}{{An{{j{Ah}}Al}}}}{{{d{b}}c}AnCh}{{}c{}}0000{{bf}{{j{h}}}}{{lf}{{j{n}}}}{{{Aj{n}}{Bh{{d{Bd}}}}}{{An{AdAl}}}}{dc{}}{{{d{b}}f}{{An{bAl}}}}{c{{An{e}}}{}{}}0{c{{An{{d{e}}Cj}}}{{Cl{{d{Bf}}}}}{}}101100{c{{d{e}}}{{Cl{{d{Bf}}}}}{}}0{{}{{An{c}}}{}}0000{{{d{b}}}c{}}{{{d{{j{Bf}}}}}Cn}0{dD`}0000","D":"Df","p":[[5,"PyCodecAdapter",0,82],[1,"reference"],[5,"Python",83],[5,"PyCodec",0,84],[5,"Bound",85],[5,"PyCodecClassAdapter",0,82],[5,"PyCodecClass",0,86],[0,"mut"],[10,"PyCodecMethods",0,84],[1,"unit"],[10,"PyCodecClassMethods",0,86],[5,"PyDict",87],[5,"Borrowed",85],[5,"PyErr",88],[6,"Result",89],[10,"Deserializer",90],[5,"String",91],[1,"str"],[5,"PyAny",92],[6,"Option",93],[8,"AnyCowArray",94],[8,"AnyArray",94],[8,"AnyArrayView",94],[8,"AnyArrayViewMut",94],[5,"PyModule",95],[10,"DynCodecType",96],[5,"PyObject",97],[10,"Serializer",98],[5,"PyDowncastError",88],[10,"Into",99],[1,"bool"],[5,"TypeId",100],[5,"PyCodecRegistry",0]],"r":[[0,84],[1,82],[2,86],[3,82],[4,86],[5,84],[6,101],[32,102]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8ACwAKAAkAFQACABkAAAAbAAAAHQABACAAAAAnAAEAKwABADAAAAA5AAAAOwAXAA=="}],\
["numcodecs_uniform_noise",{"t":"KPPTFGPHNNNNNNNNNNNNNNNNNMNNMOONNNNNNNNNNOOOO","n":["Float","MismatchedDecodeIntoDtype","MismatchedDecodeIntoShape","NEG_HALF","UniformNoiseCodec","UniformNoiseCodecError","UnsupportedDtype","add_uniform_noise","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","fmt","from","from","from_config","get_config","hash_bits","into","into","mul_add","scale","seed","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","ty","type_id","type_id","decoded","decoded","provided","provided"],"q":[[0,"numcodecs_uniform_noise"],[41,"numcodecs_uniform_noise::UniformNoiseCodecError"],[45,"ndarray"],[46,"ndarray::dimension::dimension_trait"],[47,"numcodecs::array"],[48,"core::result"],[49,"serde::de"],[50,"core::fmt"],[51,"serde::ser"],[52,"core::hash"],[53,"alloc::string"],[54,"core::any"]],"i":[0,16,16,4,0,0,16,0,8,16,8,16,8,8,8,8,8,8,8,16,16,8,16,8,8,4,8,16,4,8,8,8,8,16,8,16,8,16,8,8,16,23,24,23,24],"f":"```````{{{b{ce}}cd}{{f{ce}}}hj}{l{{l{c}}}{}}0{{{l{n}}}{{l{nc}}}{}}0{{{l{A`}}}A`}{{l{l{nc}}}Ab{}}{lAb}{{{l{A`}}Ad}{{Ah{Afc}}}{}}{{{l{A`}}AjAl}{{Ah{Abc}}}{}}{c{{Ah{A`}}}An}2{{{l{B`}}{l{nBb}}}Bd}0{cc{}}02{{{l{A`}}c}AhBf}{{h{l{nc}}}AbBh}{{}c{}}0{{hhh}h}``3{lc{}}{lBj}{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{l}{lBl}0````","D":"Bj","p":[[8,"CowArray",45],[1,"u64"],[8,"Array",45],[10,"Float",0],[10,"Dimension",46],[1,"reference"],[0,"mut"],[5,"UniformNoiseCodec",0],[1,"unit"],[8,"AnyCowArray",47],[8,"AnyArray",47],[6,"Result",48],[8,"AnyArrayView",47],[8,"AnyArrayViewMut",47],[10,"Deserializer",49],[6,"UniformNoiseCodecError",0],[5,"Formatter",50],[8,"Result",50],[10,"Serializer",51],[10,"Hasher",52],[5,"String",53],[5,"TypeId",54],[15,"MismatchedDecodeIntoDtype",41],[15,"MismatchedDecodeIntoShape",41]],"r":[],"b":[[19,"impl-Display-for-UniformNoiseCodecError"],[20,"impl-Debug-for-UniformNoiseCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgAAwAJAAwAGAABACAACQA="}],\
["numcodecs_zlib",{"t":"PPPPPPPPPPPPPPPPFGFPPPFGNNNNNNNNNNNNNNNNNHNNHHNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOO","n":["EncodedDataNotBytes","EncodedDataNotOneDimensional","HeaderDecodeFailed","HeaderEncodeFailed","MismatchedDecodeIntoDtype","MismatchedDecodeIntoShape","ZBestCompression","ZBestSpeed","ZLevel2","ZLevel3","ZLevel4","ZLevel5","ZLevel6","ZLevel7","ZLevel8","ZNoCompression","ZlibCodec","ZlibCodecError","ZlibDecodeError","ZlibDecodeExcessiveEncodedData","ZlibDecodeFailed","ZlibDecodeProducedLess","ZlibHeaderError","ZlibLevel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compress","decode","decode_into","decompress","decompress_into","deserialize","deserialize","encode","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_config","get_config","into","into","into","into","into","level","serialize","serialize","source","source","source","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","decoded","decoded","dtype","provided","provided","shape","source","source","source"],"q":[[0,"numcodecs_zlib"],[94,"numcodecs_zlib::ZlibCodecError"],[103,"numcodecs::array"],[104,"alloc::vec"],[105,"core::result"],[106,"serde::de"],[107,"core::fmt"],[108,"serde::ser"],[109,"core::error"],[110,"core::option"],[111,"alloc::string"],[112,"core::any"]],"i":[9,9,9,9,9,9,4,4,4,4,4,4,4,4,4,4,0,0,0,9,9,9,0,0,3,4,9,18,19,3,4,9,18,19,3,4,3,4,3,4,4,0,3,3,0,0,3,4,3,9,9,18,18,19,19,3,4,9,18,19,3,3,3,4,9,18,19,3,3,4,9,18,19,3,4,9,18,19,3,4,9,18,19,3,4,9,18,19,3,3,4,9,18,19,25,26,27,25,26,28,29,30,31],"f":"````````````````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{bj}00{{lh}{{Ad{{A`{n}}Ab}}}}{{{b{f}}Af}{{Ad{Ahc}}}{}}{{{b{f}}lAj}{{Ad{jc}}}{}}{{{b{{Al{n}}}}}{{Ad{AhAb}}}}{{{b{{Al{n}}}}Aj}{{Ad{jAb}}}}{c{{Ad{f}}}An}{c{{Ad{h}}}An}5{{{b{Ab}}{b{dB`}}}Bb}0{{{b{Bd}}{b{dB`}}}Bb}0{{{b{Bf}}{b{dB`}}}Bb}0{cc{}}00005{{{b{f}}c}AdBh}{{}c{}}0000`1{{{b{h}}c}AdBh}{{{b{Ab}}}{{Bl{{b{Bj}}}}}}{{{b{Bd}}}{{Bl{{b{Bj}}}}}}{{{b{Bf}}}{{Bl{{b{Bj}}}}}}{bc{}}0{bBn}00{c{{Ad{e}}}{}{}}0000{{}{{Ad{c}}}{}}0000{b}{bC`}0000`````````","D":"Dl","p":[[1,"reference"],[0,"mut"],[5,"ZlibCodec",0],[6,"ZlibLevel",0],[1,"unit"],[8,"AnyArrayView",103],[1,"u8"],[5,"Vec",104],[6,"ZlibCodecError",0],[6,"Result",105],[8,"AnyCowArray",103],[8,"AnyArray",103],[8,"AnyArrayViewMut",103],[1,"slice"],[10,"Deserializer",106],[5,"Formatter",107],[8,"Result",107],[5,"ZlibHeaderError",0],[5,"ZlibDecodeError",0],[10,"Serializer",108],[10,"Error",109],[6,"Option",110],[5,"String",111],[5,"TypeId",112],[15,"MismatchedDecodeIntoDtype",94],[15,"MismatchedDecodeIntoShape",94],[15,"EncodedDataNotBytes",94],[15,"EncodedDataNotOneDimensional",94],[15,"HeaderEncodeFailed",94],[15,"HeaderDecodeFailed",94],[15,"ZlibDecodeFailed",94]],"r":[],"b":[[49,"impl-Display-for-ZlibCodecError"],[50,"impl-Debug-for-ZlibCodecError"],[51,"impl-Display-for-ZlibHeaderError"],[52,"impl-Debug-for-ZlibHeaderError"],[53,"impl-Debug-for-ZlibDecodeError"],[54,"impl-Display-for-ZlibDecodeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEEABgAHAAkAGQAQACsAAQAvAAgAPQABAEUAGQA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
