var searchIndex = new Map(JSON.parse('[["numcodecs",{"t":"IIGGGIIIKKTKRRTPKKRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRRPKFFRPPPPPPPRPPPPPPPRPPPPPPPRPPPPPPPRNNNNNNNNNNNNNNNNNNNNNNMNMNHMNONMMNNNMNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNOOOO","n":["AnyArcArray","AnyArray","AnyArrayAssignError","AnyArrayBase","AnyArrayDType","AnyArrayView","AnyArrayViewMut","AnyCowArray","AnyRawData","ArrayDType","CODEC_ID","Codec","","Config","DTYPE","DTypeMismatch","DynCodec","DynCodecType","Error","F32","","","","","","","","F64","","","","","","","","I16","","","","","","","","I32","","","","","","","","I64","","","","","","","","I8","","","","","","","","RawData","ShapeMismatch","StaticCodec","StaticCodecConfig","StaticCodecType","Type","U16","","","","","","","","U32","","","","","","","","U64","","","","","","","","U8","","","","","","","","__clone_box","","as_bytes","as_typed","as_typed_mut","assign","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","codec_config_schema","","codec_from_config","","codec_from_config_with_id","codec_id","","config","cow","decode","decode_into","deserialize","","dtype","encode","eq","","equivalent","","","fmt","","","","","from","","","","","","from_config","get_config","","hash","into","","","","","into_cow","","into_owned","is_empty","json_schema","len","new","of","","schema_id","schema_name","serialize","","serialize_codec_config_with_id","shape","size","strides","to_binary","to_owned","","to_string","","try_from","","","","","try_into","","","","","ty","type_id","","","","","view","view_mut","with_bytes_mut","with_zeros_bytes","","zeros","","dst","","src",""],"q":[[0,"numcodecs"],[212,"numcodecs::AnyArrayAssignError"],[216,"dyn_clone::sealed"],[217,"numcodecs::array"],[218,"alloc::borrow"],[219,"ndarray::aliases"],[220,"ndarray"],[221,"core::option"],[222,"core::result"],[223,"numcodecs::codec"],[224,"schemars::schema"],[225,"serde::de"],[226,"core::marker"],[227,"core::error"],[228,"core::fmt"],[229,"serde::ser"],[230,"schemars"],[231,"core::hash"],[232,"ndarray::data_repr"],[233,"schemars::generate"],[234,"alloc::string"],[235,"core::any"],[236,"core::ops::function"]],"i":"``````````Bl`Bb1FjAj``CfFlChD`DbCbhAnA`7654321076543210765432107654321076543210:9```Bh876543218765432187654321876543213233333Bj3;Dd514<0545454>1>1`>105;;405;54444544<<514<00??24514<09555450144440`5454544<514<0514<02514<05559595FnG`10","f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}0{{{b{{h{c}}}}}{{n{{l{j}}}}}A`}{{{b{{h{c}}}}}{{Af{{b{{Ad{Ab}}}}}}}A`}{{{b{Ah{h{c}}}}}{{Af{{b{Ah{Ad{Ab}}}}}}}A`}{{{b{Ah{h{c}}}}{b{{h{e}}}}}{{Al{fAj}}}A`A`}{b{{b{c}}}{}}0000{{{b{Ah}}}{{b{Ahc}}}{}}0000{{{b{{h{c}}}}}{{h{c}}}A`}{{{b{An}}}An}{{b{b{Ahc}}}f{}}0{{bj}f}0{{{b{{Bb{}{{B`{c}}}}}}}Bd{{Bh{}{{Bf{}}}}}}{{{b{{Bj{c}}}}}BdBl}{{{b{{Bb{}{{B`{c}}}}}}e}{{Al{c}}}{{Bh{}{{Bf{}}}}}Bn}{{{b{{Bj{c}}}}e}{{Al{g}}}BlBn{}}{{{b{c}}e}AlBbBn}{{{b{{Bb{}{{B`{c}}}}}}}{{b{C`}}}{{Bh{}{{Bf{}}}}}}{{{b{{Bj{c}}}}}{{b{C`}}}Bl}`{{{b{{h{c}}}}}CbA`}{{{b{{Cf{}{{Cd{c}}}}}}Cb}{{Al{Chc}}}{CjClCn}}{{{b{{Cf{}{{Cd{c}}}}}}D`Db}{{Al{fc}}}{CjClCn}}{c{{Al{An}}}Bn}{c{{Al{{Dd{e}}}}}BnBl}{{{b{{h{c}}}}}AnA`}4{{{b{{h{c}}}}{b{{h{c}}}}}DfA`}{{{b{An}}{b{An}}}Df}{{b{b{c}}}Df{}}00{{{b{{h{c}}}}{b{AhDh}}}DjA`}{{{b{An}}{b{AhDh}}}Dj}0{{{b{Aj}}{b{AhDh}}}Dj}0{cc{}}000{b{{Dd{c}}}Bl}1{c{{Bl{}{{Dl{c}}}}}{DnE`Eb}}{{{b{{Bl{}{{Dl{c}}}}}}}{{Dd{{Bl{}{{Dl{c}}}}}}}{DnE`Eb}}{{{b{{Bh{}{{Bf{c}}}}}}e}AlBbEd}{{{b{An}}{b{Ahc}}}fEf}{{}c{}}0000{ChCb}{{{h{{Eh{f}}}}}Cb}{{{h{c}}}ChA`}{{{b{{h{c}}}}}DfA`}{{{b{AhEj}}}Bd}{{{b{{h{c}}}}}ElA`}{{}{{Dd{c}}}Bl}{{}{{Bj{c}}}Bl}{{}An}{{}{{n{C`}}}}0{{{b{An}}c}AlEd}{{{b{{Dd{c}}}}e}AlBlEd}{{{b{c}}{b{e}}g}AlDnBhEd}{{{b{{h{c}}}}}{{b{{l{El}}}}}A`}{AnEl}{{{b{{h{c}}}}}{{b{{l{En}}}}}A`}{AnAn}{bc{}}0{bF`}0{c{{Al{e}}}{}{}}0000{{}{{Al{c}}}{}}0000{{{b{{Bh{}{{Bf{c}}}}}}}cBb}{bFb}0000{{{b{{h{c}}}}}D`A`}{{{b{Ah{h{c}}}}}DbA`}{{{b{Ah{h{c}}}}g}eA`{}{{Ff{{b{Ah{l{j}}}}}{{Fd{e}}}}}}{{An{b{{l{El}}}}e}{{Fh{Chc}}}{}{{Ff{{b{Ah{l{j}}}}}{{Fd{c}}}}}}{{An{b{{l{El}}}}e}{{Fh{{h{{Eh{f}}}}c}}}{}{{Ff{{b{Ah{l{j}}}}}{{Fd{c}}}}}}{{An{b{{l{El}}}}}Ch}{{An{b{{l{El}}}}}{{h{{Eh{f}}}}}}````","D":"Il","p":[[1,"reference",null,null,1],[5,"Private",216],[1,"unit"],[6,"AnyArrayBase",0,217],[1,"u8"],[1,"slice"],[6,"Cow",218],[10,"AnyRawData",0,217],[8,"IxDyn",219],[5,"ArrayBase",220],[6,"Option",221,null,1],[0,"mut"],[6,"AnyArrayAssignError",0,217],[6,"Result",222,null,1],[6,"AnyArrayDType",0,217],[17,"Codec"],[10,"DynCodecType",0,223],[5,"Schema",224],[17,"Type"],[10,"DynCodec",0,223],[5,"StaticCodecType",0,223],[10,"StaticCodec",0,223],[10,"Deserializer",225],[1,"str"],[8,"AnyCowArray",0,217],[17,"Error"],[10,"Codec",0,223],[8,"AnyArray",0,217],[10,"Send",226],[10,"Sync",226],[10,"Error",227],[8,"AnyArrayView",0,217],[8,"AnyArrayViewMut",0,217],[5,"StaticCodecConfig",0,223],[1,"bool"],[5,"Formatter",228],[8,"Result",228],[17,"Config"],[10,"Serialize",229],[10,"Deserialize",225],[10,"JsonSchema",230],[10,"Serializer",229],[10,"Hasher",231],[5,"OwnedRepr",232],[5,"SchemaGenerator",233],[1,"usize"],[1,"isize"],[5,"String",234],[5,"TypeId",235],[17,"Output"],[10,"FnOnce",236],[1,"tuple",null,null,1],[10,"ArrayDType",0],[8,"AnyArcArray",0],[15,"DTypeMismatch",212],[15,"ShapeMismatch",212]],"r":[[0,217],[1,217],[2,217],[3,217],[4,217],[5,217],[6,217],[7,217],[8,217],[9,217],[11,223],[16,223],[17,223],[69,223],[70,223],[71,223],[131,223],[180,223]],"b":[[148,"impl-Debug-for-AnyArrayDType"],[149,"impl-Display-for-AnyArrayDType"],[150,"impl-Debug-for-AnyArrayAssignError"],[151,"impl-Display-for-AnyArrayAssignError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIoADgAUAC8ASgAhAHAADwCBAAAAgwAAAIYAAACLAAEAjwAJAJ0AAACiAAAArAAAALEAAwC6AA0AyQAEAA==","P":[[107,"T"],[110,"T,U"],[111,"T"],[122,""],[123,"T"],[125,""],[127,"DynCodecType::Codec"],[128,"T"],[129,"DynCodecType::Codec,D"],[130,"T,D,DynCodecType::Codec"],[131,"T,D"],[132,"DynCodecType::Codec"],[133,"T"],[136,"Codec::Error"],[138,"__D"],[139,"__D,T"],[140,"T"],[141,"Codec::Error"],[142,"T"],[143,""],[144,"K"],[147,"T"],[148,""],[152,"T"],[158,"StaticCodec::Config"],[160,"DynCodec::Type,S"],[161,"__H"],[162,"U"],[167,""],[169,"T"],[171,""],[172,"T"],[175,""],[178,"__S"],[179,"T,__S"],[180,"T,C,S"],[181,"T"],[182,""],[183,"T"],[184,""],[185,"T"],[187,""],[189,"U,T"],[194,"U"],[199,"DynCodec::Type"],[200,""],[205,"T"],[207,"T,O,"],[208,"T,"],[210,""]]}],["numcodecs_asinh",{"t":"FGPPPNHNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNO","n":["AsinhCodec","AsinhCodecError","MismatchedDecodeIntoArray","NonFiniteData","UnsupportedDtype","__clone_box","asinh","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","","from","","","from_config","get_config","","into","","json_schema","schema_id","schema_name","serialize","sinh","sinh_into","source","to_owned","to_string","try_from","","try_into","","ty","type_id","","source"],"q":[[0,"numcodecs_asinh"],[44,"numcodecs_asinh::AsinhCodecError"],[45,"dyn_clone::sealed"],[46,"ndarray"],[47,"core::result"],[48,"num_traits::float"],[49,"num_traits::sign"],[50,"ndarray::data_traits"],[51,"ndarray::dimension::dimension_trait"],[52,"numcodecs::array"],[53,"serde::de"],[54,"core::fmt"],[55,"serde::ser"],[56,"numcodecs::codec"],[57,"schemars::generate"],[58,"schemars::schema"],[59,"alloc::borrow"],[60,"core::error"],[61,"core::option"],[62,"alloc::string"],[63,"core::any"]],"i":"``l00Al`0101000000011011000010000``1010101001Dh","f":"`````{{bd}f}{{{h{eg}}c}{{n{{j{cg}}l}}}{A`Ab}{{Af{}{{Ad{c}}}}}Ah}{b{{b{c}}}{}}0{{{b{Aj}}}{{b{Ajc}}}{}}0{{{b{Al}}}Al}{{b{b{Ajc}}}f{}}{{bAn}f}{{{b{Al}}B`}{{n{Bbc}}}{}}{{{b{Al}}BdBf}{{n{fc}}}{}}{c{{n{Al}}}Bh}2{{{b{l}}{b{AjBj}}}Bl}0{cc{}}0{Bnl}{cAl{}}{{bc}nC`}{{{b{Al}}}{{Cb{Al}}}}{{}c{}}0{{{b{AjCd}}}Cf}{{}{{Cj{Ch}}}}0{{{b{Al}}c}nC`}{{{h{eg}}c}{{n{{j{cg}}l}}}A`{{Af{}{{Ad{c}}}}}Ah}{{{Cl{ce}}{Cn{ce}}c}{{n{fl}}}A`Ah}{{{b{l}}}{{Db{{b{D`}}}}}}{bc{}}{bDd}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{b}{bDf}0`","D":"Al","p":[[1,"reference",null,null,1],[5,"Private",45],[1,"unit"],[5,"ArrayBase",46],[8,"Array",46],[6,"AsinhCodecError",0],[6,"Result",47,null,1],[10,"Float",48],[10,"Signed",49],[17,"Elem"],[10,"Data",50],[10,"Dimension",51],[0,"mut"],[5,"AsinhCodec",0],[1,"u8"],[8,"AnyCowArray",52],[8,"AnyArray",52],[8,"AnyArrayView",52],[8,"AnyArrayViewMut",52],[10,"Deserializer",53],[5,"Formatter",54],[8,"Result",54],[6,"AnyArrayAssignError",52],[10,"Serializer",55],[5,"StaticCodecConfig",56],[5,"SchemaGenerator",57],[5,"Schema",58],[1,"str"],[6,"Cow",59],[8,"ArrayView",46],[8,"ArrayViewMut",46],[10,"Error",60],[6,"Option",61,null,1],[5,"String",62],[5,"TypeId",63],[15,"MismatchedDecodeIntoArray",44]],"r":[],"b":[[18,"impl-Display-for-AsinhCodecError"],[19,"impl-Debug-for-AsinhCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ABQAGAAAACAAMABcAAwAdAAMAIwAJAA==","P":[[6,"T,S,D"],[7,"T"],[11,""],[12,"T"],[13,""],[14,"Codec::Error"],[16,"__D"],[17,"Codec::Error"],[18,""],[20,"T"],[22,""],[23,"StaticCodec::Config"],[24,"S"],[25,""],[26,"U"],[28,""],[31,"__S"],[32,"T,S,D"],[33,"T,D"],[34,""],[35,"T"],[36,""],[37,"U,T"],[39,"U"],[41,""]]}],["numcodecs_bit_round",{"t":"TRFGPKTTPTPNHNNNNNNNNNNNNNNNNMNNNNNNONNNNMNNNNNNNNNOOO","n":["BINARY_ONE","Binary","BitRoundCodec","BitRoundCodecError","ExcessiveKeepBits","Float","MANITSSA_BITS","MANTISSA_MASK","MismatchedDecodeIntoArray","TY","UnsupportedDtype","__clone_box","bit_round","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","","from","","","from_binary","from_config","get_config","","into","","json_schema","keepbits","schema_id","schema_name","serialize","source","to_binary","to_owned","to_string","try_from","","try_into","","ty","type_id","","dtype","keepbits","source"],"q":[[0,"numcodecs_bit_round"],[51,"numcodecs_bit_round::BitRoundCodecError"],[54,"dyn_clone::sealed"],[55,"ndarray"],[56,"core::result"],[57,"ndarray::data_traits"],[58,"ndarray::dimension::dimension_trait"],[59,"numcodecs::array"],[60,"serde::de"],[61,"core::fmt"],[62,"core::marker"],[63,"core::ops::bit"],[64,"core::ops::arith"],[65,"numcodecs::codec"],[66,"serde::ser"],[67,"schemars::generate"],[68,"schemars::schema"],[69,"alloc::borrow"],[70,"core::error"],[71,"core::option"],[72,"alloc::string"],[73,"core::any"]],"i":"Ab0``n`11010Al`01010000000110112000010000012010101001Ef0Eh","f":"```````````{{bd}f}{{{h{eg}}j}{{A`{{l{cg}}n}}}Ab{{Af{}{{Ad{c}}}}}Ah}{b{{b{c}}}{}}0{{{b{Aj}}}{{b{Ajc}}}{}}0{{{b{Al}}}Al}{{b{b{Ajc}}}f{}}{{bj}f}{{{b{Al}}An}{{A`{B`c}}}{}}{{{b{Al}}BbBd}{{A`{fc}}}{}}{c{{A`{Al}}}Bf}2{{{b{n}}{b{AjBh}}}Bj}0{cc{}}0{Bln}{c{{Ab{}{{Bn{c}}}}}{C`{Cd{}{{Cb{c}}}}{Ch{Cf}{{Cb{c}}}}{Cj{c}{{Cb{c}}}}{Cl{c}}{Cn{c}{{Cb{c}}}}{D`{c}}}}{cAl{}}{{{b{Al}}}{{Db{Al}}}}{{bc}A`Dd}{{}c{}}0{{{b{AjDf}}}Dh}`{{}{{Dl{Dj}}}}0{{{b{Al}}c}A`Dd}{{{b{n}}}{{E`{{b{Dn}}}}}}{{{Ab{}{{Bn{c}}}}}c{C`{Cd{}{{Cb{c}}}}{Ch{Cf}{{Cb{c}}}}{Cj{c}{{Cb{c}}}}{Cl{c}}{Cn{c}{{Cb{c}}}}{D`{c}}}}{bc{}}{bEb}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{b}{bEd}0```","D":"Bn","p":[[1,"reference",null,null,1],[5,"Private",54],[1,"unit"],[5,"ArrayBase",55],[1,"u8"],[8,"Array",55],[6,"BitRoundCodecError",0],[6,"Result",56,null,1],[10,"Float",0],[17,"Elem"],[10,"Data",57],[10,"Dimension",58],[0,"mut"],[5,"BitRoundCodec",0],[8,"AnyCowArray",59],[8,"AnyArray",59],[8,"AnyArrayView",59],[8,"AnyArrayViewMut",59],[10,"Deserializer",60],[5,"Formatter",61],[8,"Result",61],[6,"AnyArrayAssignError",59],[17,"Binary"],[10,"Copy",62],[17,"Output"],[10,"Not",63],[1,"u32"],[10,"Shr",63],[10,"Add",64],[10,"AddAssign",64],[10,"BitAnd",63],[10,"BitAndAssign",63],[5,"StaticCodecConfig",65],[10,"Serializer",66],[5,"SchemaGenerator",67],[5,"Schema",68],[1,"str"],[6,"Cow",69],[10,"Error",70],[6,"Option",71,null,1],[5,"String",72],[5,"TypeId",73],[15,"ExcessiveKeepBits",51],[15,"MismatchedDecodeIntoArray",51]],"r":[],"b":[[24,"impl-Debug-for-BitRoundCodecError"],[25,"impl-Display-for-BitRoundCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ABwAMAAAADgAMAB0AAAAfAAIAJAAAACYAAwArAAgA","P":[[12,"T,S,D"],[13,"T"],[17,""],[18,"T"],[19,""],[20,"Codec::Error"],[22,"__D"],[23,"Codec::Error"],[24,""],[26,"T"],[28,""],[29,"Float::Binary"],[30,"StaticCodec::Config"],[31,""],[32,"S"],[33,"U"],[35,""],[39,"__S"],[40,""],[41,"Float::Binary"],[42,"T"],[43,""],[44,"U,T"],[46,"U"],[48,""]]}],["numcodecs_fixed_offset_scale",{"t":"FGPPNNNNNNNNNNNNNNNNNNNNNNNOHONNNNNNNNNNNNNHHO","n":["FixedOffsetScaleCodec","FixedOffsetScaleCodecError","MismatchedDecodeIntoArray","UnsupportedDtype","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","","from","","","from_config","get_config","","into","","json_schema","offset","scale","","schema_id","schema_name","serialize","source","to_owned","to_string","try_from","","try_into","","ty","type_id","","unscale","unscale_into","source"],"q":[[0,"numcodecs_fixed_offset_scale"],[45,"numcodecs_fixed_offset_scale::FixedOffsetScaleCodecError"],[46,"dyn_clone::sealed"],[47,"numcodecs::array"],[48,"core::result"],[49,"serde::de"],[50,"core::fmt"],[51,"serde::ser"],[52,"numcodecs::codec"],[53,"schemars::generate"],[54,"schemars::schema"],[55,"ndarray"],[56,"num_traits::float"],[57,"ndarray::data_traits"],[58,"ndarray::dimension::dimension_trait"],[59,"alloc::borrow"],[60,"core::error"],[61,"core::option"],[62,"alloc::string"],[63,"core::any"]],"i":"``Aj0j01010000000110110000100`00001010101001``Df","f":"````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{b{b{hc}}}f{}}{{bl}f}{{{b{j}}n}{{Ab{A`c}}}{}}{{{b{j}}AdAf}{{Ab{fc}}}{}}{c{{Ab{j}}}Ah}2{{{b{Aj}}{b{hAl}}}An}0{cc{}}0{B`Aj}{cj{}}{{bc}AbBb}{{{b{j}}}{{Bd{j}}}}{{}c{}}0{{{b{hBf}}}Bh}`{{{Bj{eg}}cc}{{Bl{cg}}}Bn{{Cb{}{{C`{c}}}}}Cd}`{{}{{Ch{Cf}}}}0{{{b{j}}c}AbBb}{{{b{Aj}}}{{Cl{{b{Cj}}}}}}{bc{}}{bCn}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{b}{bD`}09{{{Db{ce}}{Dd{ce}}cc}{{Ab{fAj}}}BnCd}`","D":"An","p":[[1,"reference",null,null,1],[5,"Private",46],[1,"unit"],[0,"mut"],[5,"FixedOffsetScaleCodec",0],[1,"u8"],[8,"AnyCowArray",47],[8,"AnyArray",47],[6,"Result",48,null,1],[8,"AnyArrayView",47],[8,"AnyArrayViewMut",47],[10,"Deserializer",49],[6,"FixedOffsetScaleCodecError",0],[5,"Formatter",50],[8,"Result",50],[6,"AnyArrayAssignError",47],[10,"Serializer",51],[5,"StaticCodecConfig",52],[5,"SchemaGenerator",53],[5,"Schema",54],[5,"ArrayBase",55],[8,"Array",55],[10,"Float",56],[17,"Elem"],[10,"Data",57],[10,"Dimension",58],[1,"str"],[6,"Cow",59],[10,"Error",60],[6,"Option",61,null,1],[5,"String",62],[5,"TypeId",63],[8,"ArrayView",55],[8,"ArrayViewMut",55],[15,"MismatchedDecodeIntoArray",45]],"r":[],"b":[[16,"impl-Debug-for-FixedOffsetScaleCodecError"],[17,"impl-Display-for-FixedOffsetScaleCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ABAAFAA0AFQADABsAAAAfAAwA","P":[[5,"T"],[9,""],[10,"T"],[11,""],[12,"Codec::Error"],[14,"__D"],[15,"Codec::Error"],[16,""],[18,"T"],[20,""],[21,"StaticCodec::Config"],[22,"S"],[23,""],[24,"U"],[26,""],[28,"T,S,D"],[30,""],[32,"__S"],[33,""],[34,"T"],[35,""],[36,"U,T"],[38,"U"],[40,""],[43,"T,S,D"],[44,"T,D"]]}],["numcodecs_identity",{"t":"FGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNO","n":["IdentityCodec","IdentityCodecError","MismatchedDecodeIntoArray","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","","from","","","from_config","get_config","","into","","json_schema","schema_id","schema_name","serialize","source","to_owned","to_string","try_from","","try_into","","ty","type_id","","source"],"q":[[0,"numcodecs_identity"],[39,"numcodecs_identity::IdentityCodecError"],[40,"dyn_clone::sealed"],[41,"numcodecs::array"],[42,"core::result"],[43,"serde::de"],[44,"core::fmt"],[45,"numcodecs::codec"],[46,"serde::ser"],[47,"schemars::generate"],[48,"schemars::schema"],[49,"alloc::borrow"],[50,"core::error"],[51,"core::option"],[52,"alloc::string"],[53,"core::any"]],"i":"``Ajj01010000000110110000100001010101001Cf","f":"```{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{b{b{hc}}}f{}}{{bl}f}{{{b{j}}n}{{Ab{A`c}}}{}}{{{b{j}}AdAf}{{Ab{fc}}}{}}{c{{Ab{j}}}Ah}2{{{b{Aj}}{b{hAl}}}An}0{cc{}}0{B`Aj}{cj{}}{{{b{j}}}{{Bb{j}}}}{{bc}AbBd}{{}c{}}0{{{b{hBf}}}Bh}{{}{{Bl{Bj}}}}0{{{b{j}}c}AbBd}{{{b{Aj}}}{{C`{{b{Bn}}}}}}{bc{}}{bCb}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{b}{bCd}0`","D":"Ab","p":[[1,"reference",null,null,1],[5,"Private",40],[1,"unit"],[0,"mut"],[5,"IdentityCodec",0],[1,"u8"],[8,"AnyCowArray",41],[8,"AnyArray",41],[6,"Result",42,null,1],[8,"AnyArrayView",41],[8,"AnyArrayViewMut",41],[10,"Deserializer",43],[6,"IdentityCodecError",0],[5,"Formatter",44],[8,"Result",44],[6,"AnyArrayAssignError",41],[5,"StaticCodecConfig",45],[10,"Serializer",46],[5,"SchemaGenerator",47],[5,"Schema",48],[1,"str"],[6,"Cow",49],[10,"Error",50],[6,"Option",51,null,1],[5,"String",52],[5,"TypeId",53],[15,"MismatchedDecodeIntoArray",39]],"r":[],"b":[[15,"impl-Display-for-IdentityCodecError"],[16,"impl-Debug-for-IdentityCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8AAwAEAA0AFAADABoADQA=","P":[[4,"T"],[8,""],[9,"T"],[10,""],[11,"Codec::Error"],[13,"__D"],[14,"Codec::Error"],[15,""],[17,"T"],[19,""],[20,"StaticCodec::Config"],[21,""],[22,"S"],[23,"U"],[25,""],[28,"__S"],[29,""],[30,"T"],[31,""],[32,"U,T"],[34,"U"],[36,""]]}],["numcodecs_linear_quantize",{"t":"PPPPPPPGFGGFPPPPKTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOO","n":["DecodeInvalidShapeHeader","EncodedDataNotOneDimensional","F32","F64","HeaderDecodeFailed","HeaderEncodeFailed","InvalidEncodedDType","LinearQuantizeBins","LinearQuantizeCodec","LinearQuantizeCodecError","LinearQuantizeDType","LinearQuantizeHeaderError","MismatchedDecodeIntoDtype","MismatchedDecodeIntoShape","MismatchedEncodeDType","NonFiniteData","Unsigned","ZERO","_1B1","_1B10","_1B11","_1B12","_1B13","_1B14","_1B15","_1B16","_1B17","_1B18","_1B19","_1B2","_1B20","_1B21","_1B22","_1B23","_1B24","_1B25","_1B26","_1B27","_1B28","_1B29","_1B3","_1B30","_1B31","_1B32","_1B33","_1B34","_1B35","_1B36","_1B37","_1B38","_1B39","_1B4","_1B40","_1B41","_1B42","_1B43","_1B44","_1B45","_1B46","_1B47","_1B48","_1B49","_1B5","_1B50","_1B51","_1B52","_1B53","_1B54","_1B55","_1B56","_1B57","_1B58","_1B59","_1B6","_1B60","_1B61","_1B62","_1B63","_1B64","_1B7","_1B8","_1B9","__clone_box","","","bits","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","decode","decode_into","deserialize","","","dtype","encode","fmt","","","","","","from","","","","","","from_config","get_config","","into","","","","","json_schema","","","quantize","reconstruct","reconstruct_into","schema_id","","","schema_name","","","serialize","","","source","","to_owned","","","to_string","","","try_from","","","","","try_into","","","","","ty","type_id","","","","","configured","","decoded","dtype","provided","","","shape","source","",""],"q":[[0,"numcodecs_linear_quantize"],[171,"numcodecs_linear_quantize::LinearQuantizeCodecError"],[182,"dyn_clone::sealed"],[183,"numcodecs::array"],[184,"core::result"],[185,"serde::de"],[186,"core::fmt"],[187,"ndarray::error"],[188,"numcodecs::codec"],[189,"serde::ser"],[190,"schemars::generate"],[191,"schemars::schema"],[192,"ndarray"],[193,"alloc::vec"],[194,"num_traits::float"],[195,"num_traits::identities"],[196,"ndarray::data_traits"],[197,"ndarray::dimension::dimension_trait"],[198,"core::ops::function"],[199,"ndarray::aliases"],[200,"alloc::borrow"],[201,"core::error"],[202,"core::option"],[203,"alloc::string"],[204,"core::any"]],"i":"Bb0l0111`````1111`Dbn000000000000000000000000000000000000000000000000000000000000000j3100314Bd14250142142142111421144550014255011114250142```142142142501424501425014250114250ElEnF`Fb321FdFfFhFj","f":"``````````````````````````````````````````````````````````````````````````````````{{bd}f}00`{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{j}}}j}{{{b{l}}}l}{{{b{n}}}n}{{b{b{hc}}}f{}}00{{bA`}f}00{{{b{j}}Ab}{{Af{Adc}}}{}}{{{b{j}}AhAj}{{Af{fc}}}{}}{c{{Af{j}}}Al}{c{{Af{l}}}Al}{c{{Af{n}}}Al}`4{{{b{l}}{b{hAn}}}B`}0{{{b{Bb}}{b{hAn}}}B`}0{{{b{Bd}}{b{hAn}}}B`}0{cc{}}00{BfBb}11{cj{}}{{{b{j}}}{{Bh{j}}}}{{bc}AfBj}{{}c{}}0000{{{b{hBl}}}Bn}00{{{b{{C`{eg}}}}k}{{Af{{Cb{i}}Bb}}}{CdCfChCj}{{Cn{}{{Cl{c}}}}}D`Db{{Df{c}{{Dd{i}}}}}}{{{b{{Dh{c}}}}g}{{Af{{Dj{e}}Bb}}}Db{CdDl}{{Df{c}{{Dd{e}}}}}}{{{b{{Dh{c}}}}{Dn{e}}g}{{Af{fBb}}}Db{CdDl}{{Df{c}{{Dd{e}}}}}}{{}{{Eb{E`}}}}00000{{{b{j}}c}AfBj}{{{b{l}}c}AfBj}{{{b{n}}c}AfBj}{{{b{Bb}}}{{Ef{{b{Ed}}}}}}{{{b{Bd}}}{{Ef{{b{Ed}}}}}}{bc{}}00{bEh}00{c{{Af{e}}}{}{}}0000{{}{{Af{c}}}{}}0000{b}{bEj}0000```````````","D":"Ef","p":[[1,"reference",null,null,1],[5,"Private",182],[1,"unit"],[0,"mut"],[5,"LinearQuantizeCodec",0],[6,"LinearQuantizeDType",0],[6,"LinearQuantizeBins",0],[1,"u8"],[8,"AnyCowArray",183],[8,"AnyArray",183],[6,"Result",184,null,1],[8,"AnyArrayView",183],[8,"AnyArrayViewMut",183],[10,"Deserializer",185],[5,"Formatter",186],[8,"Result",186],[6,"LinearQuantizeCodecError",0],[5,"LinearQuantizeHeaderError",0],[5,"ShapeError",187],[5,"StaticCodecConfig",188],[10,"Serializer",189],[5,"SchemaGenerator",190],[5,"Schema",191],[5,"ArrayBase",192],[5,"Vec",193],[10,"Float",194],[10,"ConstZero",195],[10,"ConstOne",195],[10,"Serialize",189],[17,"Elem"],[10,"Data",196],[10,"Dimension",197],[10,"Unsigned",0],[17,"Output"],[10,"Fn",198],[1,"slice"],[8,"ArrayD",199],[10,"DeserializeOwned",185],[8,"ArrayViewMutD",199],[1,"str"],[6,"Cow",200],[10,"Error",201],[6,"Option",202,null,1],[5,"String",203],[5,"TypeId",204],[15,"MismatchedEncodeDType",171],[15,"MismatchedDecodeIntoDtype",171],[15,"MismatchedDecodeIntoShape",171],[15,"InvalidEncodedDType",171],[15,"EncodedDataNotOneDimensional",171],[15,"HeaderEncodeFailed",171],[15,"HeaderDecodeFailed",171],[15,"DecodeInvalidShapeHeader",171]],"r":[],"b":[[112,"impl-Debug-for-LinearQuantizeDType"],[113,"impl-Display-for-LinearQuantizeDType"],[114,"impl-Display-for-LinearQuantizeCodecError"],[115,"impl-Debug-for-LinearQuantizeCodecError"],[116,"impl-Display-for-LinearQuantizeHeaderError"],[117,"impl-Debug-for-LinearQuantizeHeaderError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIsACAADAAEAEwBCAFcAFwBwAAYAegAAAH0AAgCFAAIAiwAgAA==","P":[[86,"T"],[96,""],[99,"T"],[102,""],[105,"Codec::Error"],[107,"__D"],[109,"D"],[111,"Codec::Error"],[112,""],[118,"T"],[121,""],[122,"T"],[124,"StaticCodec::Config"],[125,""],[126,"S"],[127,"U"],[132,""],[135,"T,S,D,Q,"],[136,"Q,T,"],[138,""],[144,"__S"],[146,"S"],[147,""],[149,"T"],[152,""],[155,"U,T"],[160,"U"],[165,""]]}],["numcodecs_log",{"t":"FGPPPPNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNO","n":["LogCodec","LogCodecError","MismatchedDecodeIntoArray","NonFiniteData","NonPositiveData","UnsupportedDtype","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","exp","exp_into","fmt","","from","","","from_config","get_config","","into","","json_schema","ln","schema_id","schema_name","serialize","source","to_owned","to_string","try_from","","try_into","","ty","type_id","","source"],"q":[[0,"numcodecs_log"],[45,"numcodecs_log::LogCodecError"],[46,"dyn_clone::sealed"],[47,"numcodecs::array"],[48,"core::result"],[49,"serde::de"],[50,"ndarray"],[51,"num_traits::float"],[52,"ndarray::data_traits"],[53,"ndarray::dimension::dimension_trait"],[54,"core::fmt"],[55,"numcodecs::codec"],[56,"serde::ser"],[57,"schemars::generate"],[58,"schemars::schema"],[59,"num_traits::sign"],[60,"alloc::borrow"],[61,"core::error"],[62,"core::option"],[63,"alloc::string"],[64,"core::any"]],"i":"``An000j01010000000``11011000010`0001010101001Dh","f":"``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{b{b{hc}}}f{}}{{bl}f}{{{b{j}}n}{{Ab{A`c}}}{}}{{{b{j}}AdAf}{{Ab{fc}}}{}}{c{{Ab{j}}}Ah}2{{{Aj{eg}}}{{Ab{{Al{cg}}An}}}B`{{Bd{}{{Bb{c}}}}}Bf}{{{Bh{ce}}{Bj{ce}}}{{Ab{fAn}}}B`Bf}{{{b{An}}{b{hBl}}}Bn}0{cc{}}{C`An}1{cj{}}{{{b{j}}}{{Cb{j}}}}{{bc}AbCd}{{}c{}}0{{{b{hCf}}}Ch}{{{Aj{eg}}}{{Ab{{Al{cg}}An}}}{B`Cj}{{Bd{}{{Bb{c}}}}}Bf}{{}{{Cn{Cl}}}}0{{{b{j}}c}AbCd}{{{b{An}}}{{Db{{b{D`}}}}}}{bc{}}{bDd}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{b}{bDf}0`","D":"An","p":[[1,"reference",null,null,1],[5,"Private",46],[1,"unit"],[0,"mut"],[5,"LogCodec",0],[1,"u8"],[8,"AnyCowArray",47],[8,"AnyArray",47],[6,"Result",48,null,1],[8,"AnyArrayView",47],[8,"AnyArrayViewMut",47],[10,"Deserializer",49],[5,"ArrayBase",50],[8,"Array",50],[6,"LogCodecError",0],[10,"Float",51],[17,"Elem"],[10,"Data",52],[10,"Dimension",53],[8,"ArrayView",50],[8,"ArrayViewMut",50],[5,"Formatter",54],[8,"Result",54],[6,"AnyArrayAssignError",47],[5,"StaticCodecConfig",55],[10,"Serializer",56],[5,"SchemaGenerator",57],[5,"Schema",58],[10,"Signed",59],[1,"str"],[6,"Cow",60],[10,"Error",61],[6,"Option",62,null,1],[5,"String",63],[5,"TypeId",64],[15,"MismatchedDecodeIntoArray",45]],"r":[],"b":[[20,"impl-Debug-for-LogCodecError"],[21,"impl-Display-for-LogCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ABgAHAAsAFQABABgAAAAaAAIAHwAAACEADAA=","P":[[7,"T"],[11,""],[12,"T"],[13,""],[14,"Codec::Error"],[16,"__D"],[17,"Codec::Error"],[18,"T,S,D"],[19,"T,D"],[20,""],[22,"T"],[23,""],[24,"T"],[25,"StaticCodec::Config"],[26,""],[27,"S"],[28,"U"],[30,""],[31,"T,S,D"],[32,""],[34,"__S"],[35,""],[36,"T"],[37,""],[38,"U,T"],[40,"U"],[42,""]]}],["numcodecs_python",{"t":"FFFFKKFNNNMNNNNNNNNNNMNNNNMNMNMNNMNHNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["PyCodec","PyCodecAdapter","PyCodecClass","PyCodecClassAdapter","PyCodecClassMethods","PyCodecMethods","PyCodecRegistry","__clone_box","as_codec","as_codec_class","as_type","borrow","","","","","borrow_mut","","","","","class","clone","clone_into","clone_to_uninit","codec_config_schema","codec_from_config","","codec_id","","decode","","decode_into","encode","","export_codec_class","from","","","","","from_codec","from_codec_class","from_registry_with_config","get_codec","get_config","","into","","","","","into_codec","into_codec_class","register_codec","to_owned","try_clone","try_from","","","","","try_into","","","","","ty","type_check","","type_id","","","","","with_downcast",""],"q":[[0,"numcodecs_python"],[77,"dyn_clone::sealed"],[78,"numcodecs_python::adapter"],[79,"pyo3::marker"],[80,"numcodecs_python::codec"],[81,"pyo3::instance"],[82,"numcodecs_python::codec_class"],[83,"pyo3::types::typeobject"],[84,"schemars::schema"],[85,"pyo3::types::dict"],[86,"pyo3::err"],[87,"core::result"],[88,"serde::de"],[89,"alloc::string"],[90,"pyo3::types::any"],[91,"core::option"],[92,"numcodecs::array"],[93,"pyo3::types::module"],[94,"numcodecs::codec"],[95,"serde::ser"],[96,"core::any"],[97,"core::ops::function"],[98,"numcodecs_python::registry"],[99,"numcodecs_python::export"]],"i":"```````h0A`Ad21lAbDj54210Aj6665454506606`65321656106653216516665321653216326532165","f":"```````{{bd}f}{{{b{h}}j}{{b{{n{l}}}}}}{{{b{A`}}j}{{b{{n{Ab}}}}}}{{{b{Ad}}}{{b{{n{Af}}}}}}{b{{b{c}}}{}}0000{{{b{Ah}}}{{b{Ahc}}}{}}0000{{{b{Aj}}}{{n{Ab}}}}{{{b{h}}}h}{{b{b{Ahc}}}f{}}{{bAl}f}{{{b{A`}}}An}{{{b{Ad}}{Bb{B`}}}{{Bf{{n{l}}Bd}}}}{{{b{A`}}c}{{Bf{e}}}Bh{}}{{{b{Ad}}}{{Bf{BjBd}}}}{{{b{A`}}}{{b{Bl}}}}{{{b{Aj}}{Bb{Bn}}{C`{{Bb{Bn}}}}}{{Bf{{n{Bn}}Bd}}}}{{{b{h}}Cb}{{Bf{Cdc}}}{}}{{{b{h}}CfCh}{{Bf{fc}}}{}}{{{b{Aj}}{Bb{Bn}}}{{Bf{{n{Bn}}Bd}}}}2{{jc{Bb{Cj}}}{{Bf{{n{Ab}}Bd}}}Cl}{cc{}}0000{{{n{l}}}{{Bf{hBd}}}}{{{n{Ab}}}{{Bf{A`Bd}}}}{c{{Bf{h}}}Bh}{{{Bb{B`}}}{{Bf{{n{l}}Bd}}}}{{{b{Aj}}}{{Bf{{n{B`}}Bd}}}}{{{b{h}}c}BfCn}{{}c{}}0000{{hj}{{n{l}}}}{{A`j}{{n{Ab}}}}{{{Bb{Ab}}{C`{{b{Bl}}}}}{{Bf{fBd}}}}{bc{}}{{{b{h}}j}{{Bf{hBd}}}}{c{{Bf{e}}}{}{}}0000{{}{{Bf{c}}}{}}0000{{{b{h}}}c{}}{{{b{{n{Bn}}}}}D`}0{bDb}0000{{{b{{n{l}}}}g}{{C`{e}}}Dd{}{{Dh{{b{c}}}{{Df{e}}}}}}{{{b{{n{Ab}}}}g}{{C`{e}}}Cl{}{{Dh{{b{c}}}{{Df{e}}}}}}","D":"Dl","p":[[1,"reference",null,null,1],[5,"Private",77],[1,"unit"],[5,"PyCodecAdapter",0,78],[5,"Python",79],[5,"PyCodec",0,80],[5,"Bound",81],[5,"PyCodecClassAdapter",0,78],[5,"PyCodecClass",0,82],[10,"PyCodecClassMethods",0,82],[5,"PyType",83],[0,"mut"],[10,"PyCodecMethods",0,80],[1,"u8"],[5,"Schema",84],[5,"PyDict",85],[5,"Borrowed",81],[5,"PyErr",86],[6,"Result",87,null,1],[10,"Deserializer",88],[5,"String",89],[1,"str"],[5,"PyAny",90],[6,"Option",91,null,1],[8,"AnyCowArray",92],[8,"AnyArray",92],[8,"AnyArrayView",92],[8,"AnyArrayViewMut",92],[5,"PyModule",93],[10,"DynCodecType",94],[10,"Serializer",95],[1,"bool"],[5,"TypeId",96],[10,"DynCodec",94],[17,"Output"],[10,"FnOnce",97],[5,"PyCodecRegistry",0]],"r":[[0,80],[1,78],[2,82],[3,78],[4,82],[5,80],[6,98],[35,99]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACcACgAIAAAADAAJABcAAwAcAAAAHgAAACAAAQAjAAAALwAAADgAAAA6ABEA","P":[[11,"T"],[21,""],[23,"T"],[24,""],[27,"D,DynCodecType::Codec"],[28,""],[31,"Codec::Error"],[33,""],[34,"Codec::Error"],[35,"T"],[41,""],[43,"D"],[44,""],[46,"S"],[47,"U"],[52,""],[55,"T"],[56,""],[57,"U,T"],[62,"U"],[67,"DynCodec::Type"],[68,""],[75,"T,O,"]]}],["numcodecs_random_projection",{"t":"FPPKPTPPPPPPFPFGGGPTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNMHNNNNNNHHOHHHHONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMOOOOOOOOO","n":["ClosedOpenUnit","CorruptedNumberOfComponents","Explicit","FloatExt","Gaussian","HALF","JohnsonLindenstrauss","MismatchedDecodeIntoArray","NonFiniteData","NonMatrixData","NumberOfFeaturesMismatch","NumberOfSamplesMismatch","OpenClosedUnit","ProjectedArrayZeroComponents","RandomProjectionCodec","RandomProjectionCodecError","RandomProjectionKind","RandomProjectionReduction","Sparse","TWO","UnsupportedDtype","__clone_box","","","","","borrow","","","","","","borrow_mut","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","decode","decode_into","density_or_ping_li_minimum","deserialize","","","","encode","eq","","fmt","","from","","","","","","","","from_config","from_f64","from_usize","get_config","","hash","","into","","","","","","into_usize","johnson_lindenstrauss_min_k","json_schema","","","","partial_cmp","","project_into","project_with_projection","projection","reconstruct","reconstruct_into","reconstruct_into_with_projection","reconstruct_with_projection","reduction","schema_id","","","","schema_name","","","","seed","serialize","","","","source","to_owned","","","","","to_string","try_from","","","","","","try_into","","","","","","ty","type_id","","","","","","u01x2","input","metadata","output","","source","","density","epsilon","k"],"q":[[0,"numcodecs_random_projection"],[142,"numcodecs_random_projection::RandomProjectionCodecError"],[148,"numcodecs_random_projection::RandomProjectionKind"],[149,"numcodecs_random_projection::RandomProjectionReduction"],[151,"dyn_clone::sealed"],[152,"core::clone"],[153,"numcodecs::array"],[154,"core::result"],[155,"core::option"],[156,"serde::de"],[157,"core::cmp"],[158,"core::fmt"],[159,"ndarray::error"],[160,"serde::ser"],[161,"numcodecs::codec"],[162,"core::hash"],[163,"schemars::generate"],[164,"schemars::schema"],[165,"ndarray::aliases"],[166,"ndarray"],[167,"ndarray::data_traits"],[168,"core::ops::function"],[169,"ndarray::dimension::dimension_trait"],[170,"alloc::borrow"],[171,"core::error"],[172,"alloc::string"],[173,"core::any"]],"i":"`C`l`nAd233333`3````103j32A`Af25461025461025410254102541022`2540210662546661023322102546103`254010``2````22540254022540625410625461025461022546103FjFl10FnG`GbGdGf","f":"`````````````````````{{bd}f}0000{b{{b{c}}}{}}00000{{{b{h}}}{{b{hc}}}{}}00000{{{b{j}}}j}{{{b{l}}}l}{{{b{n}}}n}{{{b{{A`{c}}}}}{{A`{c}}}{AbAd}}{{{b{{Af{c}}}}}{{Af{c}}}{AbAd}}{{b{b{hc}}}f{}}0000{{bAh}f}0000{{{b{j}}Aj}{{An{Alc}}}{}}{{{b{j}}B`Bb}{{An{fc}}}{}}{{{Bf{{Af{Bd}}}}Bh}cAd}{c{{An{j}}}Bj}{c{{An{l}}}Bj}{c{{An{n}}}Bj}{c{{An{{Af{Bd}}}}}Bj}6{{{b{{A`{c}}}}{b{{A`{c}}}}}Bl{BnAd}}{{{b{{Af{c}}}}{b{{Af{c}}}}}Bl{BnAd}}{{{b{C`}}{b{hCb}}}Cd}0{cc{}}00{CfC`}1{ChC`}22{cj{}}{BdAd}{BhAd}{{bc}AnCj}{{{b{j}}}{{Cl{j}}}}{{{b{{A`{c}}}}{b{he}}}f{CnAd}D`}{{{b{{Af{c}}}}{b{he}}}f{CnAd}D`}{{}c{}}00000{AdBh}{{Bh{Af{Bd}}}Bh}{{{b{hDb}}}Dd}000{{{b{{A`{c}}}}{b{{A`{c}}}}}{{Bf{Df}}}{DhAd}}{{{b{{Af{c}}}}{b{{Af{c}}}}}{{Bf{Df}}}{DhAd}}{{{Dl{eDj}}{Dn{cDj}}gc}{{An{fC`}}}Ad{{Eb{}{{E`{c}}}}}{{Ef{BhBh}{{Ed{c}}}}}}{{{Dl{eg}}Eh{b{l}}{b{n}}}{{An{{Ej{cDj}}C`}}}Ad{{Eb{}{{E`{c}}}}}El}`{{{Dl{eDj}}Bhgc}{{An{{Ej{cDj}}C`}}}Ad{{Eb{}{{E`{c}}}}}{{Ef{BhBh}{{Ed{c}}}}}}2{{{Dl{eg}}{Dn{cg}}Eh{b{n}}}{{An{fC`}}}Ad{{Eb{}{{E`{c}}}}}El}{{{Dl{eg}}Eh{b{n}}}{{An{{Ej{cDj}}C`}}}Ad{{Eb{}{{E`{c}}}}}El}`{{}{{F`{En}}}}0000000`{{{b{j}}c}AnCj}{{{b{l}}c}AnCj}{{{b{n}}c}AnCj}{{{b{{Af{Bd}}}}c}AnCj}{{{b{C`}}}{{Bf{{b{Fb}}}}}}{bc{}}0000{bFd}{c{{An{e}}}{}{}}00000{{}{{An{c}}}{}}00000{b}{bFf}00000{Eh{{Fh{{A`{Ad}}{Af{Ad}}}}}}`````````","D":"Gd","p":[[1,"reference",null,null,1],[5,"Private",151],[1,"unit"],[0,"mut"],[5,"RandomProjectionCodec",0],[6,"RandomProjectionReduction",0],[6,"RandomProjectionKind",0],[5,"ClosedOpenUnit",0],[10,"Clone",152],[10,"FloatExt",0],[5,"OpenClosedUnit",0],[1,"u8"],[8,"AnyCowArray",153],[8,"AnyArray",153],[6,"Result",154,null,1],[8,"AnyArrayView",153],[8,"AnyArrayViewMut",153],[1,"f64"],[6,"Option",155,null,1],[1,"usize"],[10,"Deserializer",156],[1,"bool"],[10,"PartialEq",157],[6,"RandomProjectionCodecError",0],[5,"Formatter",158],[8,"Result",158],[5,"ShapeError",159],[6,"AnyArrayAssignError",153],[10,"Serializer",160],[5,"StaticCodecConfig",161],[10,"Hash",162],[10,"Hasher",162],[5,"SchemaGenerator",163],[5,"Schema",164],[6,"Ordering",157],[10,"PartialOrd",157],[8,"Ix2",165],[5,"ArrayBase",166],[8,"ArrayViewMut",166],[17,"Elem"],[10,"Data",167],[17,"Output"],[10,"Fn",168],[1,"u64"],[8,"Array",166],[10,"Dimension",169],[1,"str"],[6,"Cow",170],[10,"Error",171],[5,"String",172],[5,"TypeId",173],[1,"tuple",null,null,1],[15,"NumberOfSamplesMismatch",142],[15,"NumberOfFeaturesMismatch",142],[15,"NonMatrixData",142],[15,"MismatchedDecodeIntoArray",142],[15,"Sparse",148],[15,"JohnsonLindenstrauss",149],[15,"Explicit",149]],"r":[],"b":[[63,"impl-Debug-for-RandomProjectionCodecError"],[64,"impl-Display-for-RandomProjectionCodecError"],[68,"impl-From%3CShapeError%3E-for-RandomProjectionCodecError"],[70,"impl-From%3CAnyArrayAssignError%3E-for-RandomProjectionCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF0ACQAWACEAOQAIAEUAAABHAAAASgAAAE0AAwBZAAUAZwAHAHAAHQA=","P":[[26,"T"],[38,""],[41,"T"],[48,""],[53,"Codec::Error"],[55,"T"],[56,"__D"],[59,"D"],[60,"Codec::Error"],[61,"T"],[63,""],[65,"T"],[68,""],[69,"T"],[70,""],[71,"T"],[73,"StaticCodec::Config"],[74,""],[76,"S"],[77,""],[78,"T,__H"],[80,"U"],[86,""],[92,"T"],[94,"T,S,"],[95,"T,S,D"],[97,"T,S,"],[99,"T,S,D"],[102,""],[111,"__S"],[114,"S"],[115,""],[116,"T"],[121,""],[122,"U,T"],[128,"U"],[134,""]]}],["numcodecs_reinterpret",{"t":"PPPPPFGNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNOOOOOOOOO","n":["InvalidEncodedShape","InvalidReinterpret","MismatchedDecodeDType","MismatchedDecodeIntoArray","MismatchedEncodeDType","ReinterpretCodec","ReinterpretCodecError","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","","from","","","from_config","get_config","","into","","json_schema","passthrough","reinterpret_array","reinterpret_array_into","schema_id","schema_name","serialize","source","to_binary","to_bytes","to_owned","to_string","try_from","","try_into","","try_new","ty","type_id","","configured","","decode_dtype","dtype","encode_dtype","provided","","shape","source"],"q":[[0,"numcodecs_reinterpret"],[49,"numcodecs_reinterpret::ReinterpretCodecError"],[58,"dyn_clone::sealed"],[59,"numcodecs::array"],[60,"core::result"],[61,"serde::de"],[62,"core::fmt"],[63,"serde::ser"],[64,"numcodecs::codec"],[65,"schemars::generate"],[66,"schemars::schema"],[67,"ndarray"],[68,"core::marker"],[69,"ndarray::data_traits"],[70,"ndarray::dimension::dimension_trait"],[71,"core::ops::function"],[72,"alloc::borrow"],[73,"core::error"],[74,"core::option"],[75,"alloc::string"],[76,"core::any"]],"i":"Aj0000``j01010000000110110000100``0001000101010001DlDnE`Eb1320Ed","f":"```````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{b{b{hc}}}f{}}{{bl}f}{{{b{j}}n}{{Ab{A`c}}}{}}{{{b{j}}AdAf}{{Ab{fc}}}{}}{c{{Ab{j}}}Ah}2{{{b{Aj}}{b{hAl}}}An}0{cc{}}{B`Aj}1{cj{}}{{bc}AbBb}{{{b{j}}}{{Bd{j}}}}{{}c{}}0{{{b{hBf}}}Bh}{Bjj}{{{Bl{eg}}k}{{Bn{ig}}}C`{{Cd{}{{Cb{c}}}}}Cf{}{{Cj{c}{{Ch{i}}}}}}{{{Cl{ce}}iAf}{{Ab{fAj}}}C`CfCn{{Cj{c}{{Ch{g}}}}}}{{}{{Db{D`}}}}0{{{b{j}}c}AbBb}{{{b{Aj}}}{{Df{{b{Dd}}}}}}55{bc{}}{bDh}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{{BjBj}{{Ab{jAj}}}}{b}{bDj}0`````````","D":"Cf","p":[[1,"reference",null,null,1],[5,"Private",58],[1,"unit"],[0,"mut"],[5,"ReinterpretCodec",0],[1,"u8"],[8,"AnyCowArray",59],[8,"AnyArray",59],[6,"Result",60,null,1],[8,"AnyArrayView",59],[8,"AnyArrayViewMut",59],[10,"Deserializer",61],[6,"ReinterpretCodecError",0],[5,"Formatter",62],[8,"Result",62],[6,"AnyArrayAssignError",59],[10,"Serializer",63],[5,"StaticCodecConfig",64],[5,"SchemaGenerator",65],[5,"Schema",66],[6,"AnyArrayDType",59],[5,"ArrayBase",67],[8,"Array",67],[10,"Copy",68],[17,"Elem"],[10,"Data",69],[10,"Dimension",70],[17,"Output"],[10,"Fn",71],[8,"ArrayView",67],[10,"ArrayDType",59],[1,"str"],[6,"Cow",72],[10,"Error",73],[6,"Option",74,null,1],[5,"String",75],[5,"TypeId",76],[15,"MismatchedEncodeDType",49],[15,"MismatchedDecodeDType",49],[15,"InvalidReinterpret",49],[15,"InvalidEncodedShape",49],[15,"MismatchedDecodeIntoArray",49]],"r":[],"b":[[19,"impl-Display-for-ReinterpretCodecError"],[20,"impl-Debug-for-ReinterpretCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ABwAIAA0AFwAAABkAAgAeAAAAIgADACgABQAvAAIA","P":[[8,"T"],[12,""],[13,"T"],[14,""],[15,"Codec::Error"],[17,"D"],[18,"Codec::Error"],[19,""],[21,"T"],[22,""],[23,"T"],[24,"StaticCodec::Config"],[25,"S"],[26,""],[27,"U"],[29,""],[31,"T,S,D,U,"],[32,"T,D,U,"],[33,""],[35,"S"],[36,""],[39,"T"],[40,""],[41,"U,T"],[43,"U"],[45,""]]}],["numcodecs_round",{"t":"PFFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNNNNNNNNNNNNNNNNO","n":["MismatchedDecodeIntoArray","Positive","RoundCodec","RoundCodecError","UnsupportedDtype","__clone_box","","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","decode","decode_into","deserialize","","encode","eq","fmt","","from","","","","from_config","get_config","","hash","into","","","json_schema","","partial_cmp","precision","round","schema_id","","schema_name","","serialize","","source","to_owned","","to_string","try_from","","","try_into","","","ty","type_id","","","source"],"q":[[0,"numcodecs_round"],[63,"numcodecs_round::RoundCodecError"],[64,"dyn_clone::sealed"],[65,"core::clone"],[66,"num_traits::float"],[67,"numcodecs::array"],[68,"core::result"],[69,"serde::de"],[70,"core::cmp"],[71,"core::fmt"],[72,"numcodecs::codec"],[73,"serde::ser"],[74,"core::hash"],[75,"schemars::generate"],[76,"schemars::schema"],[77,"core::option"],[78,"ndarray"],[79,"ndarray::data_traits"],[80,"ndarray::dimension::dimension_trait"],[81,"alloc::borrow"],[82,"core::error"],[83,"alloc::string"],[84,"core::any"]],"i":"Bf```0jl10210210101011101022102211101021001`10101021021021021102Ed","f":"`````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{j}}}j}{{{b{{l{c}}}}}{{l{c}}}{nA`}}{{b{b{hc}}}f{}}0{{bAb}f}0{{{b{j}}Ad}{{Ah{Afc}}}{}}{{{b{j}}AjAl}{{Ah{fc}}}{}}{c{{Ah{j}}}An}{c{{Ah{{l{B`}}}}}An}3{{{b{{l{c}}}}{b{{l{c}}}}}Bb{BdA`}}{{{b{Bf}}{b{hBh}}}Bj}0{cc{}}00{BlBf}{cj{}}{{{b{j}}}{{Bn{j}}}}{{bc}AhC`}{{{b{{l{c}}}}{b{he}}}f{CbA`}Cd}{{}c{}}00{{{b{hCf}}}Ch}0{{{b{{l{c}}}}{b{{l{c}}}}}{{Cl{Cj}}}{CnA`}}`{{{D`{eg}}{l{c}}}{{Db{cg}}}A`{{Df{}{{Dd{c}}}}}Dh}{{}{{Dl{Dj}}}}000{{{b{j}}c}AhC`}{{{b{{l{B`}}}}c}AhC`}{{{b{Bf}}}{{Cl{{b{Dn}}}}}}{bc{}}0{bE`}{c{{Ah{e}}}{}{}}00{{}{{Ah{c}}}{}}00{b}{bEb}00`","D":"An","p":[[1,"reference",null,null,1],[5,"Private",64],[1,"unit"],[0,"mut"],[5,"RoundCodec",0],[5,"Positive",0],[10,"Clone",65],[10,"Float",66],[1,"u8"],[8,"AnyCowArray",67],[8,"AnyArray",67],[6,"Result",68,null,1],[8,"AnyArrayView",67],[8,"AnyArrayViewMut",67],[10,"Deserializer",69],[1,"f64"],[1,"bool"],[10,"PartialEq",70],[6,"RoundCodecError",0],[5,"Formatter",71],[8,"Result",71],[6,"AnyArrayAssignError",67],[5,"StaticCodecConfig",72],[10,"Serializer",73],[10,"Hash",74],[10,"Hasher",74],[5,"SchemaGenerator",75],[5,"Schema",76],[6,"Ordering",70],[6,"Option",77,null,1],[10,"PartialOrd",70],[5,"ArrayBase",78],[8,"Array",78],[17,"Elem"],[10,"Data",79],[10,"Dimension",80],[1,"str"],[6,"Cow",81],[10,"Error",82],[5,"String",83],[5,"TypeId",84],[15,"MismatchedDecodeIntoArray",63]],"r":[],"b":[[25,"impl-Debug-for-RoundCodecError"],[26,"impl-Display-for-RoundCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADEABAAGABUAHwAEACcAAgAsABMA","P":[[7,"T"],[13,""],[14,"T"],[17,""],[19,"Codec::Error"],[21,"__D"],[22,"D"],[23,"Codec::Error"],[24,"T"],[25,""],[27,"T"],[30,""],[31,"StaticCodec::Config"],[32,""],[33,"S"],[34,"T,__H"],[35,"U"],[38,""],[40,"T"],[42,"T,S,D"],[43,""],[47,"__S"],[48,"S"],[49,""],[50,"T"],[52,""],[53,"U,T"],[56,"U"],[59,""]]}],["numcodecs_swizzle_reshape",{"t":"PGGPPPPPPPPFFGPNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNHHOOOOO","n":["AllRest","Axis","AxisGroup","CannotDecodeMergedAxes","Group","Index","InvalidAxisIndex","InvalidAxisPermutation","MergedRest","MismatchedDecodeIntoArray","MultipleRestAxes","Rest","SwizzleReshapeCodec","SwizzleReshapeCodecError","UnsupportedDtype","__clone_box","","","","axes","borrow","","","","","borrow_mut","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","decode","decode_into","deserialize","","","","encode","fmt","","","","","from","","","","","","from_config","get_config","","into","","","","","json_schema","","","","schema_id","","","","schema_name","","","","serialize","","","","source","swizzle_reshape","to_owned","","","","to_string","try_from","","","","","try_into","","","","","ty","type_id","","","","","undo_swizzle_reshape","undo_swizzle_reshape_into","axes","index","ndim","","source"],"q":[[0,"numcodecs_swizzle_reshape"],[109,"numcodecs_swizzle_reshape::SwizzleReshapeCodecError"],[114,"dyn_clone::sealed"],[115,"numcodecs::array"],[116,"core::result"],[117,"serde::de"],[118,"core::fmt"],[119,"numcodecs::codec"],[120,"serde::ser"],[121,"schemars::generate"],[122,"schemars::schema"],[123,"alloc::borrow"],[124,"core::error"],[125,"core::option"],[126,"ndarray::aliases"],[127,"ndarray"],[128,"core::marker"],[129,"ndarray::data_traits"],[130,"alloc::string"],[131,"core::any"]],"i":"l``Bd1n11011```1j31A`114230142301420142014201114201423301423301111423014201420142014203`142031423014230114230``DnE`01Eb","f":"```````````````{{bd}f}000`{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{j}}}j}{{{b{l}}}l}{{{b{n}}}n}{{{b{A`}}}A`}{{b{b{hc}}}f{}}000{{bAb}f}000{{{b{j}}Ad}{{Ah{Afc}}}{}}{{{b{j}}AjAl}{{Ah{fc}}}{}}{c{{Ah{j}}}An}{c{{Ah{l}}}An}{c{{Ah{n}}}An}{c{{Ah{A`}}}An}5{{{b{l}}{b{hB`}}}Bb}{{{b{n}}{b{hB`}}}Bb}{{{b{Bd}}{b{hB`}}}Bb}0{{{b{A`}}{b{hB`}}}Bb}{cc{}}000{BfBd}1{cj{}}{{{b{j}}}{{Bh{j}}}}{{bc}AhBj}{{}c{}}0000{{{b{hBl}}}Bn}000{{}{{Cb{C`}}}}0000000{{{b{j}}c}AhBj}{{{b{l}}c}AhBj}{{{b{n}}c}AhBj}{{{b{A`}}c}AhBj}{{{b{Bd}}}{{Cf{{b{Cd}}}}}}{{{Cj{eCh}}{b{{Cl{l}}}}}{{Ah{{Cn{cCh}}Bd}}}D`{{Dd{}{{Db{c}}}}}}{bc{}}000{bDf}{c{{Ah{e}}}{}{}}0000{{}{{Ah{c}}}{}}0000{b}{bDh}00006{{{Dj{cCh}}{Dl{cCh}}{b{{Cl{l}}}}}{{Ah{fBd}}}D`}`````","D":"Df","p":[[1,"reference",null,null,1],[5,"Private",114],[1,"unit"],[0,"mut"],[5,"SwizzleReshapeCodec",0],[6,"AxisGroup",0],[6,"Axis",0],[5,"Rest",0],[1,"u8"],[8,"AnyCowArray",115],[8,"AnyArray",115],[6,"Result",116,null,1],[8,"AnyArrayView",115],[8,"AnyArrayViewMut",115],[10,"Deserializer",117],[5,"Formatter",118],[8,"Result",118],[6,"SwizzleReshapeCodecError",0],[6,"AnyArrayAssignError",115],[5,"StaticCodecConfig",119],[10,"Serializer",120],[5,"SchemaGenerator",121],[5,"Schema",122],[1,"str"],[6,"Cow",123],[10,"Error",124],[6,"Option",125,null,1],[8,"IxDyn",126],[5,"ArrayBase",127],[1,"slice"],[8,"Array",127],[10,"Copy",128],[17,"Elem"],[10,"Data",129],[5,"String",130],[5,"TypeId",131],[8,"ArrayView",127],[8,"ArrayViewMut",127],[15,"InvalidAxisPermutation",109],[15,"InvalidAxisIndex",109],[15,"MismatchedDecodeIntoArray",109]],"r":[],"b":[[51,"impl-Display-for-SwizzleReshapeCodecError"],[52,"impl-Debug-for-SwizzleReshapeCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE8ABgAQAAMAFQAhADsAAAA9AAIARQAQAFcAFAA=","P":[[20,"T"],[30,""],[34,"T"],[38,""],[42,"Codec::Error"],[44,"__D"],[47,"D"],[48,"Codec::Error"],[49,""],[54,"T"],[58,""],[59,"T"],[60,"StaticCodec::Config"],[61,""],[62,"S"],[63,"U"],[68,""],[80,"__S"],[83,"S"],[84,""],[85,"T,S"],[86,"T"],[90,""],[91,"U,T"],[96,"U"],[101,""],[107,"T,S"],[108,"T"]]}],["numcodecs_sz3",{"t":"PPPTPPPPPPPPPPPPPPFGFGKPGFPNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOO","n":["Absolute","AbsoluteAndRelative","AbsoluteOrRelative","DTYPE","DecodeInvalidShapeHeader","EncodedDataNotBytes","EncodedDataNotOneDimensional","F32","F64","HeaderDecodeFailed","HeaderEncodeFailed","I32","I64","InvalidEncodeShape","L2Norm","MismatchedDecodeIntoArray","PS2NR","Relative","Sz3Codec","Sz3CodecError","Sz3CodingError","Sz3DType","Sz3Element","Sz3EncodeFailed","Sz3ErrorBound","Sz3HeaderError","UnsupportedDtype","__clone_box","","","always_inline_schema","borrow","","","","","","borrow_mut","","","","","","clone","","","clone_into","","","clone_to_uninit","","","compress","decode","decode_into","decompress","deserialize","","","encode","error","fmt","","","","","","","","","from","","","","","","","","from_config","get_config","","into","","","","","","json_schema","","schema_id","","schema_name","","serialize","","","source","","","to_owned","","","to_string","","","","try_from","","","","","","try_into","","","","","","ty","type_id","","","","","","dtype","shape","","source","","","","","","abs","","","l2","psnr","rel","",""],"q":[[0,"numcodecs_sz3"],[125,"numcodecs_sz3::Sz3CodecError"],[134,"numcodecs_sz3::Sz3ErrorBound"],[142,"dyn_clone::sealed"],[143,"ndarray"],[144,"alloc::vec"],[145,"core::result"],[146,"ndarray::data_traits"],[147,"ndarray::dimension::dimension_trait"],[148,"numcodecs::array"],[149,"serde::de"],[150,"core::fmt"],[151,"ndarray::error"],[152,"serde::ser"],[153,"numcodecs::codec"],[154,"schemars::generate"],[155,"schemars::schema"],[156,"alloc::borrow"],[157,"core::error"],[158,"core::option"],[159,"alloc::string"],[160,"core::any"]],"i":"n00AlAh00A`0110013133`````1``1l410042CdCf3264103263263263`22`263226441100332644410322226410326262626341026341032641032641032264103E`EbEdEf2EhEjElEnF`FbFdFfFh43Fj","f":"```````````````````````````{{bd}f}00{{}h}{b{{b{c}}}{}}00000{{{b{j}}}{{b{jc}}}{}}00000{{{b{l}}}l}{{{b{n}}}n}{{{b{A`}}}A`}{{b{b{jc}}}f{}}00{{bAb}f}00{{{Ad{eg}}{b{n}}}{{Aj{{Af{Ab}}Ah}}}Al{{B`{}{{An{c}}}}}Bb}{{{b{l}}Bd}{{Aj{Bfc}}}{}}{{{b{l}}BhBj}{{Aj{fc}}}{}}{{{b{{Bl{Ab}}}}}{{Aj{BfAh}}}}{c{{Aj{l}}}Bn}{c{{Aj{n}}}Bn}{c{{Aj{A`}}}Bn}5`{{{b{n}}{b{jC`}}}Cb}{{{b{Ah}}{b{jC`}}}Cb}0{{{b{Cd}}{b{jC`}}}Cb}0{{{b{Cf}}{b{jC`}}}Cb}0{{{b{A`}}{b{jC`}}}Cb}0{cc{}}0{ChAh}1{CjAh}222{cl{}}{{bc}AjCl}{{{b{l}}}{{Cn{l}}}}{{}c{}}00000{{{b{jD`}}}Db}0{{}{{Df{Dd}}}}000{{{b{l}}c}AjCl}{{{b{n}}c}AjCl}{{{b{A`}}c}AjCl}{{{b{Ah}}}{{Dj{{b{Dh}}}}}}{{{b{Cd}}}{{Dj{{b{Dh}}}}}}{{{b{Cf}}}{{Dj{{b{Dh}}}}}}{bc{}}00{bDl}000{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{b}{bDn}00000`````````````````","D":"G`","p":[[1,"reference",null,null,1],[5,"Private",142],[1,"unit"],[1,"bool"],[0,"mut"],[5,"Sz3Codec",0],[6,"Sz3ErrorBound",0],[6,"Sz3DType",0],[1,"u8"],[5,"ArrayBase",143],[5,"Vec",144],[6,"Sz3CodecError",0],[6,"Result",145,null,1],[10,"Sz3Element",0],[17,"Elem"],[10,"Data",146],[10,"Dimension",147],[8,"AnyCowArray",148],[8,"AnyArray",148],[8,"AnyArrayView",148],[8,"AnyArrayViewMut",148],[1,"slice"],[10,"Deserializer",149],[5,"Formatter",150],[8,"Result",150],[5,"Sz3HeaderError",0],[5,"Sz3CodingError",0],[6,"AnyArrayAssignError",148],[5,"ShapeError",151],[10,"Serializer",152],[5,"StaticCodecConfig",153],[5,"SchemaGenerator",154],[5,"Schema",155],[1,"str"],[6,"Cow",156],[10,"Error",157],[6,"Option",158,null,1],[5,"String",159],[5,"TypeId",160],[15,"EncodedDataNotBytes",125],[15,"InvalidEncodeShape",125],[15,"EncodedDataNotOneDimensional",125],[15,"HeaderEncodeFailed",125],[15,"Sz3EncodeFailed",125],[15,"HeaderDecodeFailed",125],[15,"DecodeInvalidShapeHeader",125],[15,"MismatchedDecodeIntoArray",125],[15,"AbsoluteAndRelative",134],[15,"AbsoluteOrRelative",134],[15,"Absolute",134],[15,"L2Norm",134],[15,"PS2NR",134],[15,"Relative",134]],"r":[],"b":[[62,"impl-Debug-for-Sz3CodecError"],[63,"impl-Display-for-Sz3CodecError"],[64,"impl-Display-for-Sz3HeaderError"],[65,"impl-Debug-for-Sz3HeaderError"],[66,"impl-Display-for-Sz3CodingError"],[67,"impl-Debug-for-Sz3CodingError"],[68,"impl-Display-for-Sz3DType"],[69,"impl-Debug-for-Sz3DType"],[72,"impl-From%3CAnyArrayAssignError%3E-for-Sz3CodecError"],[74,"impl-From%3CShapeError%3E-for-Sz3CodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFYACgAIAAEADAABABwAGAA2AAEAOQADAD4ACABJAAAASwAAAE8AAgBYACUA","P":[[31,"T"],[43,""],[46,"T"],[49,""],[52,"T,S,D"],[53,"Codec::Error"],[55,""],[56,"__D"],[59,"Codec::Error"],[61,""],[70,"T"],[72,""],[73,"T"],[74,""],[75,"T"],[78,"StaticCodec::Config"],[79,"S"],[80,""],[81,"U"],[87,""],[93,"__S"],[96,""],[99,"T"],[102,""],[106,"U,T"],[112,"U"],[118,""]]}],["numcodecs_uniform_noise",{"t":"KPTFGPNHNNNNNNNNNNNNNNNNNNNMNNNONNONNNNNNNNNNNO","n":["FloatExt","MismatchedDecodeIntoArray","NEG_HALF","UniformNoiseCodec","UniformNoiseCodecError","UnsupportedDtype","__clone_box","add_uniform_noise","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decode","decode_into","deserialize","encode","fmt","","from","","","from_config","get_config","","hash_bits","into","","json_schema","scale","schema_id","schema_name","seed","serialize","source","to_owned","to_string","try_from","","try_into","","ty","type_id","","source"],"q":[[0,"numcodecs_uniform_noise"],[46,"numcodecs_uniform_noise::UniformNoiseCodecError"],[47,"dyn_clone::sealed"],[48,"ndarray"],[49,"ndarray::data_traits"],[50,"ndarray::dimension::dimension_trait"],[51,"numcodecs::array"],[52,"core::result"],[53,"serde::de"],[54,"core::fmt"],[55,"numcodecs::codec"],[56,"serde::ser"],[57,"core::hash"],[58,"schemars::generate"],[59,"schemars::schema"],[60,"alloc::borrow"],[61,"core::error"],[62,"core::option"],[63,"alloc::string"],[64,"core::any"]],"i":"`Bhn``1Ah`02020000000220220001020000002020202002Df","f":"``````{{bd}f}{{{h{eg}}cj}{{l{cg}}}n{{Ab{}{{A`{c}}}}}Ad}{b{{b{c}}}{}}0{{{b{Af}}}{{b{Afc}}}{}}0{{{b{Ah}}}Ah}{{b{b{Afc}}}f{}}{{bAj}f}{{{b{Ah}}Al}{{B`{Anc}}}{}}{{{b{Ah}}BbBd}{{B`{fc}}}{}}{c{{B`{Ah}}}Bf}2{{{b{Bh}}{b{AfBj}}}Bl}0{cc{}}{BnBh}1{cAh{}}{{{b{Ah}}}{{C`{Ah}}}}{{bc}B`Cb}{{n{b{Afc}}}fCd}{{}c{}}0{{{b{AfCf}}}Ch}`{{}{{Cl{Cj}}}}0`{{{b{Ah}}c}B`Cb}{{{b{Bh}}}{{D`{{b{Cn}}}}}}{bc{}}{bDb}{c{{B`{e}}}{}{}}0{{}{{B`{c}}}{}}0{b}{bDd}0`","D":"B`","p":[[1,"reference",null,null,1],[5,"Private",47],[1,"unit"],[5,"ArrayBase",48],[1,"u64"],[8,"Array",48],[10,"FloatExt",0],[17,"Elem"],[10,"Data",49],[10,"Dimension",50],[0,"mut"],[5,"UniformNoiseCodec",0],[1,"u8"],[8,"AnyCowArray",51],[8,"AnyArray",51],[6,"Result",52,null,1],[8,"AnyArrayView",51],[8,"AnyArrayViewMut",51],[10,"Deserializer",53],[6,"UniformNoiseCodecError",0],[5,"Formatter",54],[8,"Result",54],[6,"AnyArrayAssignError",51],[5,"StaticCodecConfig",55],[10,"Serializer",56],[10,"Hasher",57],[5,"SchemaGenerator",58],[5,"Schema",59],[1,"str"],[6,"Cow",60],[10,"Error",61],[6,"Option",62,null,1],[5,"String",63],[5,"TypeId",64],[15,"MismatchedDecodeIntoArray",46]],"r":[],"b":[[19,"impl-Display-for-UniformNoiseCodecError"],[20,"impl-Debug-for-UniformNoiseCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ABwAHAAAACQAMABcAAAAZAAIAHwAAACEAAQAkAAoA","P":[[7,"T,S,D"],[8,"T"],[12,""],[13,"T"],[14,""],[15,"Codec::Error"],[17,"__D"],[18,"Codec::Error"],[19,""],[21,"T"],[22,""],[23,"T"],[24,"StaticCodec::Config"],[25,""],[26,"S"],[27,"H"],[28,"U"],[30,""],[35,"__S"],[36,""],[37,"T"],[38,""],[39,"U,T"],[41,"U"],[43,""]]}],["numcodecs_wasm_guest",{"t":"Q","n":["export_codec"],"q":[[0,"numcodecs_wasm_guest"]],"i":"`","f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["numcodecs_zfp",{"t":"PPPPPPPPPPPPPPPFGGPPNNNNNNNNNNNNNNNHNNHHNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOO","n":["DecodeUnknownDtype","EncodedDataNotBytes","EncodedDataNotOneDimensional","ExcessiveDimensionality","Expert","FixedAccuracy","FixedAccuracyModeIntegerData","FixedPrecision","FixedRate","HeaderDecodeFailed","HeaderEncodeFailed","InvalidExpertMode","MismatchedDecodeIntoArray","Reversible","UnsupportedDtype","ZfpCodec","ZfpCodecError","ZfpCompressionMode","ZfpDecodeFailed","ZfpEncodeFailed","__clone_box","","always_inline_schema","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","compress","decode","decode_into","decompress","decompress_into","deserialize","","encode","fmt","","","from","","","","from_config","get_config","","into","","","json_schema","","mode","schema_id","","schema_name","","serialize","","source","to_owned","","to_string","try_from","","","try_into","","","ty","type_id","","","dtype","mode","shape","","source","max_bits","max_prec","min_bits","min_exp","precision","rate","tolerance"],"q":[[0,"numcodecs_zfp"],[79,"numcodecs_zfp::ZfpCodecError"],[84,"numcodecs_zfp::ZfpCompressionMode"],[91,"dyn_clone::sealed"],[92,"ndarray"],[93,"alloc::vec"],[94,"core::result"],[95,"ndarray::dimension::dimension_trait"],[96,"numcodecs::array"],[97,"serde::de"],[98,"core::fmt"],[99,"serde::ser"],[100,"numcodecs::codec"],[101,"schemars::generate"],[102,"schemars::schema"],[103,"alloc::borrow"],[104,"core::error"],[105,"core::option"],[106,"alloc::string"],[107,"core::any"]],"i":"Af000n0100111101```11l10012012010101`00``010122012200001201001010120120120120012DbDdDfDhDjDl000DnE`Eb","f":"````````````````````{{bd}f}0{{}h}{b{{b{c}}}{}}00{{{b{j}}}{{b{jc}}}{}}00{{{b{l}}}l}{{{b{n}}}n}{{b{b{jc}}}f{}}0{{bA`}f}0{{{Ab{ce}}{b{n}}}{{Ah{{Ad{A`}}Af}}}`Aj}{{{b{l}}Al}{{Ah{Anc}}}{}}{{{b{l}}B`Bb}{{Ah{fc}}}{}}{{{b{{Bd{A`}}}}}{{Ah{AnAf}}}}{{{b{{Bd{A`}}}}Bb}{{Ah{fAf}}}}{c{{Ah{l}}}Bf}{c{{Ah{n}}}Bf}5{{{b{n}}{b{jBh}}}Bj}{{{b{Af}}{b{jBh}}}Bj}0{cc{}}0{BlAf}1{cl{}}{{bc}AhBn}{{{b{l}}}{{C`{l}}}}{{}c{}}00{{{b{jCb}}}Cd}0`{{}{{Ch{Cf}}}}000{{{b{l}}c}AhBn}{{{b{n}}c}AhBn}{{{b{Af}}}{{Cl{{b{Cj}}}}}}{bc{}}0{bCn}{c{{Ah{e}}}{}{}}00{{}{{Ah{c}}}{}}00{b}{bD`}00````````````","D":"Ef","p":[[1,"reference",null,null,1],[5,"Private",91],[1,"unit"],[1,"bool"],[0,"mut"],[5,"ZfpCodec",0],[6,"ZfpCompressionMode",0],[1,"u8"],[8,"ArrayView",92],[5,"Vec",93],[6,"ZfpCodecError",0],[6,"Result",94,null,1],[10,"Dimension",95],[8,"AnyCowArray",96],[8,"AnyArray",96],[8,"AnyArrayView",96],[8,"AnyArrayViewMut",96],[1,"slice"],[10,"Deserializer",97],[5,"Formatter",98],[8,"Result",98],[6,"AnyArrayAssignError",96],[10,"Serializer",99],[5,"StaticCodecConfig",100],[5,"SchemaGenerator",101],[5,"Schema",102],[1,"str"],[6,"Cow",103],[10,"Error",104],[6,"Option",105,null,1],[5,"String",106],[5,"TypeId",107],[15,"EncodedDataNotBytes",79],[15,"InvalidExpertMode",79],[15,"ExcessiveDimensionality",79],[15,"EncodedDataNotOneDimensional",79],[15,"MismatchedDecodeIntoArray",79],[15,"Expert",84],[15,"FixedPrecision",84],[15,"FixedRate",84],[15,"FixedAccuracy",84]],"r":[],"b":[[44,"impl-Display-for-ZfpCodecError"],[45,"impl-Debug-for-ZfpCodecError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADAABwAVAA4AJQABACkABQAxAAAAMwACADkAAQA8ABMA","P":[[23,"T"],[29,""],[31,"T"],[33,""],[35,"T,D"],[36,"Codec::Error"],[38,""],[40,"__D"],[42,"Codec::Error"],[43,""],[46,"T"],[48,""],[49,"T"],[50,"StaticCodec::Config"],[51,"S"],[52,""],[53,"U"],[56,""],[63,"__S"],[65,""],[66,"T"],[68,""],[69,"U,T"],[72,"U"],[75,""]]}],["numcodecs_zlib",{"t":"PPPPPPPPPPPPPPPPPFGFPFGNNNNNNNNNNNNNNNNNNHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOO","n":["DecodeExcessiveEncodedData","DecodeProducedLess","EncodedDataNotBytes","EncodedDataNotOneDimensional","HeaderDecodeFailed","HeaderEncodeFailed","MismatchedDecodeIntoArray","ZBestCompression","ZBestSpeed","ZLevel2","ZLevel3","ZLevel4","ZLevel5","ZLevel6","ZLevel7","ZLevel8","ZNoCompression","ZlibCodec","ZlibCodecError","ZlibDecodeError","ZlibDecodeFailed","ZlibHeaderError","ZlibLevel","__clone_box","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","compress","decode","decode_into","decompress","decompress_into","deserialize","","encode","fmt","","","","","","from","","","","","","from_config","get_config","","into","","","","","json_schema","","level","schema_id","","schema_name","","serialize","","source","","","to_owned","","to_string","","","try_from","","","","","try_into","","","","","ty","type_id","","","","","dtype","shape","source","","",""],"q":[[0,"numcodecs_zlib"],[102,"numcodecs_zlib::ZlibCodecError"],[108,"dyn_clone::sealed"],[109,"numcodecs::array"],[110,"alloc::vec"],[111,"core::result"],[112,"serde::de"],[113,"core::fmt"],[114,"serde::ser"],[115,"numcodecs::codec"],[116,"schemars::generate"],[117,"schemars::schema"],[118,"alloc::borrow"],[119,"core::error"],[120,"core::option"],[121,"alloc::string"],[122,"core::any"]],"i":"Ad000000l000000000```1``j1012BfBh23410232323`22``23244110023441022223410232232323410234102341023410223410D`DbDdDfDhDj","f":"```````````````````````{{bd}f}0{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{{bn}f}0{{A`l}{{Af{{Ab{n}}Ad}}}}{{{b{j}}Ah}{{Af{Ajc}}}{}}{{{b{j}}A`Al}{{Af{fc}}}{}}{{{b{{An{n}}}}}{{Af{AjAd}}}}{{{b{{An{n}}}}Al}{{Af{fAd}}}}{c{{Af{j}}}B`}{c{{Af{l}}}B`}5{{{b{Ad}}{b{hBb}}}Bd}0{{{b{Bf}}{b{hBb}}}Bd}0{{{b{Bh}}{b{hBb}}}Bd}0{cc{}}0{BjAd}111{cj{}}{{bc}AfBl}{{{b{j}}}{{Bn{j}}}}{{}c{}}0000{{{b{hC`}}}Cb}0`{{}{{Cf{Cd}}}}000{{{b{j}}c}AfBl}{{{b{l}}c}AfBl}{{{b{Ad}}}{{Cj{{b{Ch}}}}}}{{{b{Bf}}}{{Cj{{b{Ch}}}}}}{{{b{Bh}}}{{Cj{{b{Ch}}}}}}{bc{}}0{bCl}00{c{{Af{e}}}{}{}}0000{{}{{Af{c}}}{}}0000{b}{bCn}0000``````","D":"Dd","p":[[1,"reference",null,null,1],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"ZlibCodec",0],[6,"ZlibLevel",0],[1,"u8"],[8,"AnyArrayView",109],[5,"Vec",110],[6,"ZlibCodecError",0],[6,"Result",111,null,1],[8,"AnyCowArray",109],[8,"AnyArray",109],[8,"AnyArrayViewMut",109],[1,"slice"],[10,"Deserializer",112],[5,"Formatter",113],[8,"Result",113],[5,"ZlibHeaderError",0],[5,"ZlibDecodeError",0],[6,"AnyArrayAssignError",109],[10,"Serializer",114],[5,"StaticCodecConfig",115],[5,"SchemaGenerator",116],[5,"Schema",117],[1,"str"],[6,"Cow",118],[10,"Error",119],[6,"Option",120,null,1],[5,"String",121],[5,"TypeId",122],[15,"EncodedDataNotBytes",102],[15,"EncodedDataNotOneDimensional",102],[15,"HeaderEncodeFailed",102],[15,"HeaderDecodeFailed",102],[15,"ZlibDecodeFailed",102],[15,"MismatchedDecodeIntoArray",102]],"r":[],"b":[[49,"impl-Debug-for-ZlibCodecError"],[50,"impl-Display-for-ZlibCodecError"],[51,"impl-Display-for-ZlibHeaderError"],[52,"impl-Debug-for-ZlibHeaderError"],[53,"impl-Display-for-ZlibDecodeError"],[54,"impl-Debug-for-ZlibDecodeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACAAIAAkAGAARACsAAQAvAAgAOgAAAD4AAgBGAAEASQAdAA==","P":[[25,"T"],[35,""],[37,"T"],[39,""],[42,"Codec::Error"],[44,""],[46,"__D"],[47,"D"],[48,"Codec::Error"],[49,""],[55,"T"],[57,""],[58,"T"],[61,"StaticCodec::Config"],[62,"S"],[63,""],[64,"U"],[69,""],[76,"__S"],[77,"S"],[78,""],[81,"T"],[83,""],[86,"U,T"],[91,"U"],[96,""]]}],["numcodecs_zstd",{"t":"PPPPPPPFGFPPFFNNNNNNNNNNNNNNNNNNNHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOO","n":["DecodeExcessiveEncodedData","DecodeProducedLess","EncodedDataNotBytes","EncodedDataNotOneDimensional","HeaderDecodeFailed","HeaderEncodeFailed","MismatchedDecodeIntoArray","ZstdCodec","ZstdCodecError","ZstdCodingError","ZstdDecodeFailed","ZstdEncodeFailed","ZstdHeaderError","ZstdLevel","__clone_box","","always_inline_schema","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","compress","decode","decode_into","decompress","decompress_into","deserialize","","encode","fmt","","","","","","from","","","","","","from_config","get_config","","into","","","","","json_schema","","level","schema_id","","schema_name","","serialize","","source","","","to_owned","","to_string","","","try_from","","","","","try_into","","","","","ty","type_id","","","","","dtype","shape","source","","","",""],"q":[[0,"numcodecs_zstd"],[94,"numcodecs_zstd::ZstdCodecError"],[101,"dyn_clone::sealed"],[102,"numcodecs::array"],[103,"alloc::vec"],[104,"core::result"],[105,"serde::de"],[106,"core::fmt"],[107,"numcodecs::codec"],[108,"serde::ser"],[109,"schemars::generate"],[110,"schemars::schema"],[111,"alloc::borrow"],[112,"core::error"],[113,"core::option"],[114,"alloc::string"],[115,"core::any"]],"i":"Af000000```00``ln0102BhBj32410323232`33``32344110032441033332410323323232410324103241032410332410DbDdDfDhDjDlDn","f":"``````````````{{bd}f}0{{}h}{b{{b{c}}}{}}0000{{{b{j}}}{{b{jc}}}{}}0000{{{b{l}}}l}{{{b{n}}}n}{{b{b{jc}}}f{}}0{{bA`}f}0{{Abn}{{Ah{{Ad{A`}}Af}}}}{{{b{l}}Aj}{{Ah{Alc}}}{}}{{{b{l}}AbAn}{{Ah{fc}}}{}}{{{b{{B`{A`}}}}}{{Ah{AlAf}}}}{{{b{{B`{A`}}}}An}{{Ah{fAf}}}}{c{{Ah{l}}}Bb}{c{{Ah{n}}}Bb}5{{{b{Af}}{b{jBd}}}Bf}0{{{b{Bh}}{b{jBd}}}Bf}0{{{b{Bj}}{b{jBd}}}Bf}0{cc{}}0{BlAf}111{cl{}}{{{b{l}}}{{Bn{l}}}}{{bc}AhC`}{{}c{}}0000{{{b{jCb}}}Cd}0`{{}{{Ch{Cf}}}}000{{{b{l}}c}AhC`}{{{b{n}}c}AhC`}{{{b{Af}}}{{Cl{{b{Cj}}}}}}{{{b{Bh}}}{{Cl{{b{Cj}}}}}}{{{b{Bj}}}{{Cl{{b{Cj}}}}}}{bc{}}0{bCn}00{c{{Ah{e}}}{}{}}0000{{}{{Ah{c}}}{}}0000{b}{bD`}0000```````","D":"Dh","p":[[1,"reference",null,null,1],[5,"Private",101],[1,"unit"],[1,"bool"],[0,"mut"],[5,"ZstdCodec",0],[5,"ZstdLevel",0],[1,"u8"],[8,"AnyArrayView",102],[5,"Vec",103],[6,"ZstdCodecError",0],[6,"Result",104,null,1],[8,"AnyCowArray",102],[8,"AnyArray",102],[8,"AnyArrayViewMut",102],[1,"slice"],[10,"Deserializer",105],[5,"Formatter",106],[8,"Result",106],[5,"ZstdHeaderError",0],[5,"ZstdCodingError",0],[6,"AnyArrayAssignError",102],[5,"StaticCodecConfig",107],[10,"Serializer",108],[5,"SchemaGenerator",109],[5,"Schema",110],[1,"str"],[6,"Cow",111],[10,"Error",112],[6,"Option",113,null,1],[5,"String",114],[5,"TypeId",115],[15,"EncodedDataNotBytes",94],[15,"EncodedDataNotOneDimensional",94],[15,"HeaderEncodeFailed",94],[15,"ZstdEncodeFailed",94],[15,"HeaderDecodeFailed",94],[15,"ZstdDecodeFailed",94],[15,"MismatchedDecodeIntoArray",94]],"r":[],"b":[[41,"impl-Debug-for-ZstdCodecError"],[42,"impl-Display-for-ZstdCodecError"],[43,"impl-Debug-for-ZstdHeaderError"],[44,"impl-Display-for-ZstdHeaderError"],[45,"impl-Debug-for-ZstdCodingError"],[46,"impl-Display-for-ZstdCodingError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEEABwAPABIAIwABACcACAAyAAAANgACAD4AAQBBAB0A","P":[[17,"T"],[27,""],[29,"T"],[31,""],[34,"Codec::Error"],[36,""],[38,"__D"],[39,"D"],[40,"Codec::Error"],[41,""],[47,"T"],[49,""],[50,"T"],[53,"StaticCodec::Config"],[54,""],[55,"S"],[56,"U"],[61,""],[68,"__S"],[69,"S"],[70,""],[73,"T"],[75,""],[78,"U,T"],[83,"U"],[88,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6388,2714,3182,2737,2190,5283,2733,3550,5667,3178,3062,3659,4644,2697,179,3523,3617,3554]}